/**
 * BitMEX API
 * ## REST API for the BitMEX Trading Platform  [View Changelog](/app/apiChangelog)    #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  *All* table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  *This is only a small subset of what is available, to get you started.*  Fill in the parameters and click the `Try it out!` button to try any of these queries.  * [Pricing Data](#!/Quote/Quote_get)  * [Trade Data](#!/Trade/Trade_get)  * [OrderBook Data](#!/OrderBook/OrderBook_getL2)  * [Settlement Data](#!/Settlement/Settlement_get)  * [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [â‡© Download Swagger JSON](swagger.json)    ## All API Endpoints  Click to expand a section. 
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.model

import io.swagger.client.core.ApiModel
import org.joda.time.DateTime
import java.util.UUID

case class Position (
  account: Double,
  symbol: String,
  currency: String,
  underlying: Option[String],
  quoteCurrency: Option[String],
  commission: Option[Double],
  initMarginReq: Option[Double],
  maintMarginReq: Option[Double],
  riskLimit: Option[Double],
  leverage: Option[Double],
  crossMargin: Option[Boolean],
  deleveragePercentile: Option[Double],
  rebalancedPnl: Option[Double],
  prevRealisedPnl: Option[Double],
  prevUnrealisedPnl: Option[Double],
  prevClosePrice: Option[Double],
  openingTimestamp: Option[DateTime],
  openingQty: Option[Double],
  openingCost: Option[Double],
  openingComm: Option[Double],
  openOrderBuyQty: Option[Double],
  openOrderBuyCost: Option[Double],
  openOrderBuyPremium: Option[Double],
  openOrderSellQty: Option[Double],
  openOrderSellCost: Option[Double],
  openOrderSellPremium: Option[Double],
  execBuyQty: Option[Double],
  execBuyCost: Option[Double],
  execSellQty: Option[Double],
  execSellCost: Option[Double],
  execQty: Option[Double],
  execCost: Option[Double],
  execComm: Option[Double],
  currentTimestamp: Option[DateTime],
  currentQty: Option[Double],
  currentCost: Option[Double],
  currentComm: Option[Double],
  realisedCost: Option[Double],
  unrealisedCost: Option[Double],
  grossOpenCost: Option[Double],
  grossOpenPremium: Option[Double],
  grossExecCost: Option[Double],
  isOpen: Option[Boolean],
  markPrice: Option[Double],
  markValue: Option[Double],
  riskValue: Option[Double],
  homeNotional: Option[Double],
  foreignNotional: Option[Double],
  posState: Option[String],
  posCost: Option[Double],
  posCost2: Option[Double],
  posCross: Option[Double],
  posInit: Option[Double],
  posComm: Option[Double],
  posLoss: Option[Double],
  posMargin: Option[Double],
  posMaint: Option[Double],
  posAllowance: Option[Double],
  taxableMargin: Option[Double],
  initMargin: Option[Double],
  maintMargin: Option[Double],
  sessionMargin: Option[Double],
  targetExcessMargin: Option[Double],
  varMargin: Option[Double],
  realisedGrossPnl: Option[Double],
  realisedTax: Option[Double],
  realisedPnl: Option[Double],
  unrealisedGrossPnl: Option[Double],
  longBankrupt: Option[Double],
  shortBankrupt: Option[Double],
  taxBase: Option[Double],
  indicativeTaxRate: Option[Double],
  indicativeTax: Option[Double],
  unrealisedTax: Option[Double],
  unrealisedPnl: Option[Double],
  unrealisedPnlPcnt: Option[Double],
  unrealisedRoePcnt: Option[Double],
  simpleQty: Option[Double],
  simpleCost: Option[Double],
  simpleValue: Option[Double],
  simplePnl: Option[Double],
  simplePnlPcnt: Option[Double],
  avgCostPrice: Option[Double],
  avgEntryPrice: Option[Double],
  breakEvenPrice: Option[Double],
  marginCallPrice: Option[Double],
  liquidationPrice: Option[Double],
  bankruptPrice: Option[Double],
  timestamp: Option[DateTime],
  lastPrice: Option[Double],
  lastValue: Option[Double]
) extends ApiModel


