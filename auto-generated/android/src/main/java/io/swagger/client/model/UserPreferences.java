/**
 * BitMEX API
 * ## REST API for the BitMEX Trading Platform  [View Changelog](/app/apiChangelog)    #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  *All* table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  *This is only a small subset of what is available, to get you started.*  Fill in the parameters and click the `Try it out!` button to try any of these queries.  * [Pricing Data](#!/Quote/Quote_get)  * [Trade Data](#!/Trade/Trade_get)  * [OrderBook Data](#!/OrderBook/OrderBook_getL2)  * [Settlement Data](#!/Settlement/Settlement_get)  * [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [â‡© Download Swagger JSON](swagger.json)    ## All API Endpoints  Click to expand a section. 
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.*;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class UserPreferences {
  
  @SerializedName("alertOnLiquidations")
  private Boolean alertOnLiquidations = null;
  @SerializedName("animationsEnabled")
  private Boolean animationsEnabled = null;
  @SerializedName("announcementsLastSeen")
  private Date announcementsLastSeen = null;
  @SerializedName("chatChannelID")
  private Double chatChannelID = null;
  @SerializedName("colorTheme")
  private String colorTheme = null;
  @SerializedName("currency")
  private String currency = null;
  @SerializedName("debug")
  private Boolean debug = null;
  @SerializedName("disableEmails")
  private List<String> disableEmails = null;
  @SerializedName("hideConfirmDialogs")
  private List<String> hideConfirmDialogs = null;
  @SerializedName("hideConnectionModal")
  private Boolean hideConnectionModal = null;
  @SerializedName("hideFromLeaderboard")
  private Boolean hideFromLeaderboard = null;
  @SerializedName("hideNameFromLeaderboard")
  private Boolean hideNameFromLeaderboard = null;
  @SerializedName("hideNotifications")
  private List<String> hideNotifications = null;
  @SerializedName("locale")
  private String locale = null;
  @SerializedName("msgsSeen")
  private List<String> msgsSeen = null;
  @SerializedName("orderBookBinning")
  private Object orderBookBinning = null;
  @SerializedName("orderBookType")
  private String orderBookType = null;
  @SerializedName("orderClearImmediate")
  private Boolean orderClearImmediate = null;
  @SerializedName("orderControlsPlusMinus")
  private Boolean orderControlsPlusMinus = null;
  @SerializedName("showLocaleNumbers")
  private Boolean showLocaleNumbers = null;
  @SerializedName("sounds")
  private List<String> sounds = null;
  @SerializedName("strictIPCheck")
  private Boolean strictIPCheck = null;
  @SerializedName("strictTimeout")
  private Boolean strictTimeout = null;
  @SerializedName("tickerGroup")
  private String tickerGroup = null;
  @SerializedName("tickerPinned")
  private Boolean tickerPinned = null;
  @SerializedName("tradeLayout")
  private String tradeLayout = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getAlertOnLiquidations() {
    return alertOnLiquidations;
  }
  public void setAlertOnLiquidations(Boolean alertOnLiquidations) {
    this.alertOnLiquidations = alertOnLiquidations;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getAnimationsEnabled() {
    return animationsEnabled;
  }
  public void setAnimationsEnabled(Boolean animationsEnabled) {
    this.animationsEnabled = animationsEnabled;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getAnnouncementsLastSeen() {
    return announcementsLastSeen;
  }
  public void setAnnouncementsLastSeen(Date announcementsLastSeen) {
    this.announcementsLastSeen = announcementsLastSeen;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getChatChannelID() {
    return chatChannelID;
  }
  public void setChatChannelID(Double chatChannelID) {
    this.chatChannelID = chatChannelID;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getColorTheme() {
    return colorTheme;
  }
  public void setColorTheme(String colorTheme) {
    this.colorTheme = colorTheme;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }
  public void setCurrency(String currency) {
    this.currency = currency;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getDebug() {
    return debug;
  }
  public void setDebug(Boolean debug) {
    this.debug = debug;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getDisableEmails() {
    return disableEmails;
  }
  public void setDisableEmails(List<String> disableEmails) {
    this.disableEmails = disableEmails;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getHideConfirmDialogs() {
    return hideConfirmDialogs;
  }
  public void setHideConfirmDialogs(List<String> hideConfirmDialogs) {
    this.hideConfirmDialogs = hideConfirmDialogs;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getHideConnectionModal() {
    return hideConnectionModal;
  }
  public void setHideConnectionModal(Boolean hideConnectionModal) {
    this.hideConnectionModal = hideConnectionModal;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getHideFromLeaderboard() {
    return hideFromLeaderboard;
  }
  public void setHideFromLeaderboard(Boolean hideFromLeaderboard) {
    this.hideFromLeaderboard = hideFromLeaderboard;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getHideNameFromLeaderboard() {
    return hideNameFromLeaderboard;
  }
  public void setHideNameFromLeaderboard(Boolean hideNameFromLeaderboard) {
    this.hideNameFromLeaderboard = hideNameFromLeaderboard;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getHideNotifications() {
    return hideNotifications;
  }
  public void setHideNotifications(List<String> hideNotifications) {
    this.hideNotifications = hideNotifications;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getLocale() {
    return locale;
  }
  public void setLocale(String locale) {
    this.locale = locale;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getMsgsSeen() {
    return msgsSeen;
  }
  public void setMsgsSeen(List<String> msgsSeen) {
    this.msgsSeen = msgsSeen;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getOrderBookBinning() {
    return orderBookBinning;
  }
  public void setOrderBookBinning(Object orderBookBinning) {
    this.orderBookBinning = orderBookBinning;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getOrderBookType() {
    return orderBookType;
  }
  public void setOrderBookType(String orderBookType) {
    this.orderBookType = orderBookType;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getOrderClearImmediate() {
    return orderClearImmediate;
  }
  public void setOrderClearImmediate(Boolean orderClearImmediate) {
    this.orderClearImmediate = orderClearImmediate;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getOrderControlsPlusMinus() {
    return orderControlsPlusMinus;
  }
  public void setOrderControlsPlusMinus(Boolean orderControlsPlusMinus) {
    this.orderControlsPlusMinus = orderControlsPlusMinus;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getShowLocaleNumbers() {
    return showLocaleNumbers;
  }
  public void setShowLocaleNumbers(Boolean showLocaleNumbers) {
    this.showLocaleNumbers = showLocaleNumbers;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getSounds() {
    return sounds;
  }
  public void setSounds(List<String> sounds) {
    this.sounds = sounds;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getStrictIPCheck() {
    return strictIPCheck;
  }
  public void setStrictIPCheck(Boolean strictIPCheck) {
    this.strictIPCheck = strictIPCheck;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getStrictTimeout() {
    return strictTimeout;
  }
  public void setStrictTimeout(Boolean strictTimeout) {
    this.strictTimeout = strictTimeout;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getTickerGroup() {
    return tickerGroup;
  }
  public void setTickerGroup(String tickerGroup) {
    this.tickerGroup = tickerGroup;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getTickerPinned() {
    return tickerPinned;
  }
  public void setTickerPinned(Boolean tickerPinned) {
    this.tickerPinned = tickerPinned;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getTradeLayout() {
    return tradeLayout;
  }
  public void setTradeLayout(String tradeLayout) {
    this.tradeLayout = tradeLayout;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserPreferences userPreferences = (UserPreferences) o;
    return (this.alertOnLiquidations == null ? userPreferences.alertOnLiquidations == null : this.alertOnLiquidations.equals(userPreferences.alertOnLiquidations)) &&
        (this.animationsEnabled == null ? userPreferences.animationsEnabled == null : this.animationsEnabled.equals(userPreferences.animationsEnabled)) &&
        (this.announcementsLastSeen == null ? userPreferences.announcementsLastSeen == null : this.announcementsLastSeen.equals(userPreferences.announcementsLastSeen)) &&
        (this.chatChannelID == null ? userPreferences.chatChannelID == null : this.chatChannelID.equals(userPreferences.chatChannelID)) &&
        (this.colorTheme == null ? userPreferences.colorTheme == null : this.colorTheme.equals(userPreferences.colorTheme)) &&
        (this.currency == null ? userPreferences.currency == null : this.currency.equals(userPreferences.currency)) &&
        (this.debug == null ? userPreferences.debug == null : this.debug.equals(userPreferences.debug)) &&
        (this.disableEmails == null ? userPreferences.disableEmails == null : this.disableEmails.equals(userPreferences.disableEmails)) &&
        (this.hideConfirmDialogs == null ? userPreferences.hideConfirmDialogs == null : this.hideConfirmDialogs.equals(userPreferences.hideConfirmDialogs)) &&
        (this.hideConnectionModal == null ? userPreferences.hideConnectionModal == null : this.hideConnectionModal.equals(userPreferences.hideConnectionModal)) &&
        (this.hideFromLeaderboard == null ? userPreferences.hideFromLeaderboard == null : this.hideFromLeaderboard.equals(userPreferences.hideFromLeaderboard)) &&
        (this.hideNameFromLeaderboard == null ? userPreferences.hideNameFromLeaderboard == null : this.hideNameFromLeaderboard.equals(userPreferences.hideNameFromLeaderboard)) &&
        (this.hideNotifications == null ? userPreferences.hideNotifications == null : this.hideNotifications.equals(userPreferences.hideNotifications)) &&
        (this.locale == null ? userPreferences.locale == null : this.locale.equals(userPreferences.locale)) &&
        (this.msgsSeen == null ? userPreferences.msgsSeen == null : this.msgsSeen.equals(userPreferences.msgsSeen)) &&
        (this.orderBookBinning == null ? userPreferences.orderBookBinning == null : this.orderBookBinning.equals(userPreferences.orderBookBinning)) &&
        (this.orderBookType == null ? userPreferences.orderBookType == null : this.orderBookType.equals(userPreferences.orderBookType)) &&
        (this.orderClearImmediate == null ? userPreferences.orderClearImmediate == null : this.orderClearImmediate.equals(userPreferences.orderClearImmediate)) &&
        (this.orderControlsPlusMinus == null ? userPreferences.orderControlsPlusMinus == null : this.orderControlsPlusMinus.equals(userPreferences.orderControlsPlusMinus)) &&
        (this.showLocaleNumbers == null ? userPreferences.showLocaleNumbers == null : this.showLocaleNumbers.equals(userPreferences.showLocaleNumbers)) &&
        (this.sounds == null ? userPreferences.sounds == null : this.sounds.equals(userPreferences.sounds)) &&
        (this.strictIPCheck == null ? userPreferences.strictIPCheck == null : this.strictIPCheck.equals(userPreferences.strictIPCheck)) &&
        (this.strictTimeout == null ? userPreferences.strictTimeout == null : this.strictTimeout.equals(userPreferences.strictTimeout)) &&
        (this.tickerGroup == null ? userPreferences.tickerGroup == null : this.tickerGroup.equals(userPreferences.tickerGroup)) &&
        (this.tickerPinned == null ? userPreferences.tickerPinned == null : this.tickerPinned.equals(userPreferences.tickerPinned)) &&
        (this.tradeLayout == null ? userPreferences.tradeLayout == null : this.tradeLayout.equals(userPreferences.tradeLayout));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.alertOnLiquidations == null ? 0: this.alertOnLiquidations.hashCode());
    result = 31 * result + (this.animationsEnabled == null ? 0: this.animationsEnabled.hashCode());
    result = 31 * result + (this.announcementsLastSeen == null ? 0: this.announcementsLastSeen.hashCode());
    result = 31 * result + (this.chatChannelID == null ? 0: this.chatChannelID.hashCode());
    result = 31 * result + (this.colorTheme == null ? 0: this.colorTheme.hashCode());
    result = 31 * result + (this.currency == null ? 0: this.currency.hashCode());
    result = 31 * result + (this.debug == null ? 0: this.debug.hashCode());
    result = 31 * result + (this.disableEmails == null ? 0: this.disableEmails.hashCode());
    result = 31 * result + (this.hideConfirmDialogs == null ? 0: this.hideConfirmDialogs.hashCode());
    result = 31 * result + (this.hideConnectionModal == null ? 0: this.hideConnectionModal.hashCode());
    result = 31 * result + (this.hideFromLeaderboard == null ? 0: this.hideFromLeaderboard.hashCode());
    result = 31 * result + (this.hideNameFromLeaderboard == null ? 0: this.hideNameFromLeaderboard.hashCode());
    result = 31 * result + (this.hideNotifications == null ? 0: this.hideNotifications.hashCode());
    result = 31 * result + (this.locale == null ? 0: this.locale.hashCode());
    result = 31 * result + (this.msgsSeen == null ? 0: this.msgsSeen.hashCode());
    result = 31 * result + (this.orderBookBinning == null ? 0: this.orderBookBinning.hashCode());
    result = 31 * result + (this.orderBookType == null ? 0: this.orderBookType.hashCode());
    result = 31 * result + (this.orderClearImmediate == null ? 0: this.orderClearImmediate.hashCode());
    result = 31 * result + (this.orderControlsPlusMinus == null ? 0: this.orderControlsPlusMinus.hashCode());
    result = 31 * result + (this.showLocaleNumbers == null ? 0: this.showLocaleNumbers.hashCode());
    result = 31 * result + (this.sounds == null ? 0: this.sounds.hashCode());
    result = 31 * result + (this.strictIPCheck == null ? 0: this.strictIPCheck.hashCode());
    result = 31 * result + (this.strictTimeout == null ? 0: this.strictTimeout.hashCode());
    result = 31 * result + (this.tickerGroup == null ? 0: this.tickerGroup.hashCode());
    result = 31 * result + (this.tickerPinned == null ? 0: this.tickerPinned.hashCode());
    result = 31 * result + (this.tradeLayout == null ? 0: this.tradeLayout.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserPreferences {\n");
    
    sb.append("  alertOnLiquidations: ").append(alertOnLiquidations).append("\n");
    sb.append("  animationsEnabled: ").append(animationsEnabled).append("\n");
    sb.append("  announcementsLastSeen: ").append(announcementsLastSeen).append("\n");
    sb.append("  chatChannelID: ").append(chatChannelID).append("\n");
    sb.append("  colorTheme: ").append(colorTheme).append("\n");
    sb.append("  currency: ").append(currency).append("\n");
    sb.append("  debug: ").append(debug).append("\n");
    sb.append("  disableEmails: ").append(disableEmails).append("\n");
    sb.append("  hideConfirmDialogs: ").append(hideConfirmDialogs).append("\n");
    sb.append("  hideConnectionModal: ").append(hideConnectionModal).append("\n");
    sb.append("  hideFromLeaderboard: ").append(hideFromLeaderboard).append("\n");
    sb.append("  hideNameFromLeaderboard: ").append(hideNameFromLeaderboard).append("\n");
    sb.append("  hideNotifications: ").append(hideNotifications).append("\n");
    sb.append("  locale: ").append(locale).append("\n");
    sb.append("  msgsSeen: ").append(msgsSeen).append("\n");
    sb.append("  orderBookBinning: ").append(orderBookBinning).append("\n");
    sb.append("  orderBookType: ").append(orderBookType).append("\n");
    sb.append("  orderClearImmediate: ").append(orderClearImmediate).append("\n");
    sb.append("  orderControlsPlusMinus: ").append(orderControlsPlusMinus).append("\n");
    sb.append("  showLocaleNumbers: ").append(showLocaleNumbers).append("\n");
    sb.append("  sounds: ").append(sounds).append("\n");
    sb.append("  strictIPCheck: ").append(strictIPCheck).append("\n");
    sb.append("  strictTimeout: ").append(strictTimeout).append("\n");
    sb.append("  tickerGroup: ").append(tickerGroup).append("\n");
    sb.append("  tickerPinned: ").append(tickerPinned).append("\n");
    sb.append("  tradeLayout: ").append(tradeLayout).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
