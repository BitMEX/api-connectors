/**
 * BitMEX API
 * ## REST API for the BitMEX Trading Platform  [View Changelog](/app/apiChangelog)    #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  *All* table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  *This is only a small subset of what is available, to get you started.*  Fill in the parameters and click the `Try it out!` button to try any of these queries.  * [Pricing Data](#!/Quote/Quote_get)  * [Trade Data](#!/Trade/Trade_get)  * [OrderBook Data](#!/OrderBook/OrderBook_getL2)  * [Settlement Data](#!/Settlement/Settlement_get)  * [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [â‡© Download Swagger JSON](swagger.json)    ## All API Endpoints  Click to expand a section. 
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.BitMexApi) {
      root.BitMexApi = {};
    }
    root.BitMexApi.Execution = factory(root.BitMexApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Execution model module.
   * @module model/Execution
   * @version 1.2.0
   */

  /**
   * Constructs a new <code>Execution</code>.
   * Raw Order and Balance Data
   * @alias module:model/Execution
   * @class
   * @param execID {String} 
   */
  var exports = function(execID) {
    var _this = this;

    _this['execID'] = execID;














































  };

  /**
   * Constructs a <code>Execution</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Execution} obj Optional instance to populate.
   * @return {module:model/Execution} The populated <code>Execution</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('execID')) {
        obj['execID'] = ApiClient.convertToType(data['execID'], 'String');
      }
      if (data.hasOwnProperty('orderID')) {
        obj['orderID'] = ApiClient.convertToType(data['orderID'], 'String');
      }
      if (data.hasOwnProperty('clOrdID')) {
        obj['clOrdID'] = ApiClient.convertToType(data['clOrdID'], 'String');
      }
      if (data.hasOwnProperty('clOrdLinkID')) {
        obj['clOrdLinkID'] = ApiClient.convertToType(data['clOrdLinkID'], 'String');
      }
      if (data.hasOwnProperty('account')) {
        obj['account'] = ApiClient.convertToType(data['account'], 'Number');
      }
      if (data.hasOwnProperty('symbol')) {
        obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
      }
      if (data.hasOwnProperty('side')) {
        obj['side'] = ApiClient.convertToType(data['side'], 'String');
      }
      if (data.hasOwnProperty('lastQty')) {
        obj['lastQty'] = ApiClient.convertToType(data['lastQty'], 'Number');
      }
      if (data.hasOwnProperty('lastPx')) {
        obj['lastPx'] = ApiClient.convertToType(data['lastPx'], 'Number');
      }
      if (data.hasOwnProperty('underlyingLastPx')) {
        obj['underlyingLastPx'] = ApiClient.convertToType(data['underlyingLastPx'], 'Number');
      }
      if (data.hasOwnProperty('lastMkt')) {
        obj['lastMkt'] = ApiClient.convertToType(data['lastMkt'], 'String');
      }
      if (data.hasOwnProperty('lastLiquidityInd')) {
        obj['lastLiquidityInd'] = ApiClient.convertToType(data['lastLiquidityInd'], 'String');
      }
      if (data.hasOwnProperty('simpleOrderQty')) {
        obj['simpleOrderQty'] = ApiClient.convertToType(data['simpleOrderQty'], 'Number');
      }
      if (data.hasOwnProperty('orderQty')) {
        obj['orderQty'] = ApiClient.convertToType(data['orderQty'], 'Number');
      }
      if (data.hasOwnProperty('price')) {
        obj['price'] = ApiClient.convertToType(data['price'], 'Number');
      }
      if (data.hasOwnProperty('displayQty')) {
        obj['displayQty'] = ApiClient.convertToType(data['displayQty'], 'Number');
      }
      if (data.hasOwnProperty('stopPx')) {
        obj['stopPx'] = ApiClient.convertToType(data['stopPx'], 'Number');
      }
      if (data.hasOwnProperty('pegOffsetValue')) {
        obj['pegOffsetValue'] = ApiClient.convertToType(data['pegOffsetValue'], 'Number');
      }
      if (data.hasOwnProperty('pegPriceType')) {
        obj['pegPriceType'] = ApiClient.convertToType(data['pegPriceType'], 'String');
      }
      if (data.hasOwnProperty('currency')) {
        obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
      }
      if (data.hasOwnProperty('settlCurrency')) {
        obj['settlCurrency'] = ApiClient.convertToType(data['settlCurrency'], 'String');
      }
      if (data.hasOwnProperty('execType')) {
        obj['execType'] = ApiClient.convertToType(data['execType'], 'String');
      }
      if (data.hasOwnProperty('ordType')) {
        obj['ordType'] = ApiClient.convertToType(data['ordType'], 'String');
      }
      if (data.hasOwnProperty('timeInForce')) {
        obj['timeInForce'] = ApiClient.convertToType(data['timeInForce'], 'String');
      }
      if (data.hasOwnProperty('execInst')) {
        obj['execInst'] = ApiClient.convertToType(data['execInst'], 'String');
      }
      if (data.hasOwnProperty('contingencyType')) {
        obj['contingencyType'] = ApiClient.convertToType(data['contingencyType'], 'String');
      }
      if (data.hasOwnProperty('exDestination')) {
        obj['exDestination'] = ApiClient.convertToType(data['exDestination'], 'String');
      }
      if (data.hasOwnProperty('ordStatus')) {
        obj['ordStatus'] = ApiClient.convertToType(data['ordStatus'], 'String');
      }
      if (data.hasOwnProperty('triggered')) {
        obj['triggered'] = ApiClient.convertToType(data['triggered'], 'String');
      }
      if (data.hasOwnProperty('workingIndicator')) {
        obj['workingIndicator'] = ApiClient.convertToType(data['workingIndicator'], 'Boolean');
      }
      if (data.hasOwnProperty('ordRejReason')) {
        obj['ordRejReason'] = ApiClient.convertToType(data['ordRejReason'], 'String');
      }
      if (data.hasOwnProperty('simpleLeavesQty')) {
        obj['simpleLeavesQty'] = ApiClient.convertToType(data['simpleLeavesQty'], 'Number');
      }
      if (data.hasOwnProperty('leavesQty')) {
        obj['leavesQty'] = ApiClient.convertToType(data['leavesQty'], 'Number');
      }
      if (data.hasOwnProperty('simpleCumQty')) {
        obj['simpleCumQty'] = ApiClient.convertToType(data['simpleCumQty'], 'Number');
      }
      if (data.hasOwnProperty('cumQty')) {
        obj['cumQty'] = ApiClient.convertToType(data['cumQty'], 'Number');
      }
      if (data.hasOwnProperty('avgPx')) {
        obj['avgPx'] = ApiClient.convertToType(data['avgPx'], 'Number');
      }
      if (data.hasOwnProperty('commission')) {
        obj['commission'] = ApiClient.convertToType(data['commission'], 'Number');
      }
      if (data.hasOwnProperty('tradePublishIndicator')) {
        obj['tradePublishIndicator'] = ApiClient.convertToType(data['tradePublishIndicator'], 'String');
      }
      if (data.hasOwnProperty('multiLegReportingType')) {
        obj['multiLegReportingType'] = ApiClient.convertToType(data['multiLegReportingType'], 'String');
      }
      if (data.hasOwnProperty('text')) {
        obj['text'] = ApiClient.convertToType(data['text'], 'String');
      }
      if (data.hasOwnProperty('trdMatchID')) {
        obj['trdMatchID'] = ApiClient.convertToType(data['trdMatchID'], 'String');
      }
      if (data.hasOwnProperty('execCost')) {
        obj['execCost'] = ApiClient.convertToType(data['execCost'], 'Number');
      }
      if (data.hasOwnProperty('execComm')) {
        obj['execComm'] = ApiClient.convertToType(data['execComm'], 'Number');
      }
      if (data.hasOwnProperty('homeNotional')) {
        obj['homeNotional'] = ApiClient.convertToType(data['homeNotional'], 'Number');
      }
      if (data.hasOwnProperty('foreignNotional')) {
        obj['foreignNotional'] = ApiClient.convertToType(data['foreignNotional'], 'Number');
      }
      if (data.hasOwnProperty('transactTime')) {
        obj['transactTime'] = ApiClient.convertToType(data['transactTime'], 'Date');
      }
      if (data.hasOwnProperty('timestamp')) {
        obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
      }
    }
    return obj;
  }

  /**
   * @member {String} execID
   */
  exports.prototype['execID'] = undefined;
  /**
   * @member {String} orderID
   */
  exports.prototype['orderID'] = undefined;
  /**
   * @member {String} clOrdID
   */
  exports.prototype['clOrdID'] = undefined;
  /**
   * @member {String} clOrdLinkID
   */
  exports.prototype['clOrdLinkID'] = undefined;
  /**
   * @member {Number} account
   */
  exports.prototype['account'] = undefined;
  /**
   * @member {String} symbol
   */
  exports.prototype['symbol'] = undefined;
  /**
   * @member {String} side
   */
  exports.prototype['side'] = undefined;
  /**
   * @member {Number} lastQty
   */
  exports.prototype['lastQty'] = undefined;
  /**
   * @member {Number} lastPx
   */
  exports.prototype['lastPx'] = undefined;
  /**
   * @member {Number} underlyingLastPx
   */
  exports.prototype['underlyingLastPx'] = undefined;
  /**
   * @member {String} lastMkt
   */
  exports.prototype['lastMkt'] = undefined;
  /**
   * @member {String} lastLiquidityInd
   */
  exports.prototype['lastLiquidityInd'] = undefined;
  /**
   * @member {Number} simpleOrderQty
   */
  exports.prototype['simpleOrderQty'] = undefined;
  /**
   * @member {Number} orderQty
   */
  exports.prototype['orderQty'] = undefined;
  /**
   * @member {Number} price
   */
  exports.prototype['price'] = undefined;
  /**
   * @member {Number} displayQty
   */
  exports.prototype['displayQty'] = undefined;
  /**
   * @member {Number} stopPx
   */
  exports.prototype['stopPx'] = undefined;
  /**
   * @member {Number} pegOffsetValue
   */
  exports.prototype['pegOffsetValue'] = undefined;
  /**
   * @member {String} pegPriceType
   */
  exports.prototype['pegPriceType'] = undefined;
  /**
   * @member {String} currency
   */
  exports.prototype['currency'] = undefined;
  /**
   * @member {String} settlCurrency
   */
  exports.prototype['settlCurrency'] = undefined;
  /**
   * @member {String} execType
   */
  exports.prototype['execType'] = undefined;
  /**
   * @member {String} ordType
   */
  exports.prototype['ordType'] = undefined;
  /**
   * @member {String} timeInForce
   */
  exports.prototype['timeInForce'] = undefined;
  /**
   * @member {String} execInst
   */
  exports.prototype['execInst'] = undefined;
  /**
   * @member {String} contingencyType
   */
  exports.prototype['contingencyType'] = undefined;
  /**
   * @member {String} exDestination
   */
  exports.prototype['exDestination'] = undefined;
  /**
   * @member {String} ordStatus
   */
  exports.prototype['ordStatus'] = undefined;
  /**
   * @member {String} triggered
   */
  exports.prototype['triggered'] = undefined;
  /**
   * @member {Boolean} workingIndicator
   */
  exports.prototype['workingIndicator'] = undefined;
  /**
   * @member {String} ordRejReason
   */
  exports.prototype['ordRejReason'] = undefined;
  /**
   * @member {Number} simpleLeavesQty
   */
  exports.prototype['simpleLeavesQty'] = undefined;
  /**
   * @member {Number} leavesQty
   */
  exports.prototype['leavesQty'] = undefined;
  /**
   * @member {Number} simpleCumQty
   */
  exports.prototype['simpleCumQty'] = undefined;
  /**
   * @member {Number} cumQty
   */
  exports.prototype['cumQty'] = undefined;
  /**
   * @member {Number} avgPx
   */
  exports.prototype['avgPx'] = undefined;
  /**
   * @member {Number} commission
   */
  exports.prototype['commission'] = undefined;
  /**
   * @member {String} tradePublishIndicator
   */
  exports.prototype['tradePublishIndicator'] = undefined;
  /**
   * @member {String} multiLegReportingType
   */
  exports.prototype['multiLegReportingType'] = undefined;
  /**
   * @member {String} text
   */
  exports.prototype['text'] = undefined;
  /**
   * @member {String} trdMatchID
   */
  exports.prototype['trdMatchID'] = undefined;
  /**
   * @member {Number} execCost
   */
  exports.prototype['execCost'] = undefined;
  /**
   * @member {Number} execComm
   */
  exports.prototype['execComm'] = undefined;
  /**
   * @member {Number} homeNotional
   */
  exports.prototype['homeNotional'] = undefined;
  /**
   * @member {Number} foreignNotional
   */
  exports.prototype['foreignNotional'] = undefined;
  /**
   * @member {Date} transactTime
   */
  exports.prototype['transactTime'] = undefined;
  /**
   * @member {Date} timestamp
   */
  exports.prototype['timestamp'] = undefined;



  return exports;
}));


