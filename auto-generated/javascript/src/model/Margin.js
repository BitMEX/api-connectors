/**
 * BitMEX API
 * ## REST API for the BitMEX Trading Platform  [View Changelog](/app/apiChangelog)    #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  *All* table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  *This is only a small subset of what is available, to get you started.*  Fill in the parameters and click the `Try it out!` button to try any of these queries.  * [Pricing Data](#!/Quote/Quote_get)  * [Trade Data](#!/Trade/Trade_get)  * [OrderBook Data](#!/OrderBook/OrderBook_getL2)  * [Settlement Data](#!/Settlement/Settlement_get)  * [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [â‡© Download Swagger JSON](swagger.json)    ## All API Endpoints  Click to expand a section. 
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.BitMexApi) {
      root.BitMexApi = {};
    }
    root.BitMexApi.Margin = factory(root.BitMexApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Margin model module.
   * @module model/Margin
   * @version 1.2.0
   */

  /**
   * Constructs a new <code>Margin</code>.
   * @alias module:model/Margin
   * @class
   * @param account {Number} 
   * @param currency {String} 
   */
  var exports = function(account, currency) {
    var _this = this;

    _this['account'] = account;
    _this['currency'] = currency;







































  };

  /**
   * Constructs a <code>Margin</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Margin} obj Optional instance to populate.
   * @return {module:model/Margin} The populated <code>Margin</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('account')) {
        obj['account'] = ApiClient.convertToType(data['account'], 'Number');
      }
      if (data.hasOwnProperty('currency')) {
        obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
      }
      if (data.hasOwnProperty('riskLimit')) {
        obj['riskLimit'] = ApiClient.convertToType(data['riskLimit'], 'Number');
      }
      if (data.hasOwnProperty('prevState')) {
        obj['prevState'] = ApiClient.convertToType(data['prevState'], 'String');
      }
      if (data.hasOwnProperty('state')) {
        obj['state'] = ApiClient.convertToType(data['state'], 'String');
      }
      if (data.hasOwnProperty('action')) {
        obj['action'] = ApiClient.convertToType(data['action'], 'String');
      }
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
      }
      if (data.hasOwnProperty('pendingCredit')) {
        obj['pendingCredit'] = ApiClient.convertToType(data['pendingCredit'], 'Number');
      }
      if (data.hasOwnProperty('pendingDebit')) {
        obj['pendingDebit'] = ApiClient.convertToType(data['pendingDebit'], 'Number');
      }
      if (data.hasOwnProperty('confirmedDebit')) {
        obj['confirmedDebit'] = ApiClient.convertToType(data['confirmedDebit'], 'Number');
      }
      if (data.hasOwnProperty('prevRealisedPnl')) {
        obj['prevRealisedPnl'] = ApiClient.convertToType(data['prevRealisedPnl'], 'Number');
      }
      if (data.hasOwnProperty('prevUnrealisedPnl')) {
        obj['prevUnrealisedPnl'] = ApiClient.convertToType(data['prevUnrealisedPnl'], 'Number');
      }
      if (data.hasOwnProperty('grossComm')) {
        obj['grossComm'] = ApiClient.convertToType(data['grossComm'], 'Number');
      }
      if (data.hasOwnProperty('grossOpenCost')) {
        obj['grossOpenCost'] = ApiClient.convertToType(data['grossOpenCost'], 'Number');
      }
      if (data.hasOwnProperty('grossOpenPremium')) {
        obj['grossOpenPremium'] = ApiClient.convertToType(data['grossOpenPremium'], 'Number');
      }
      if (data.hasOwnProperty('grossExecCost')) {
        obj['grossExecCost'] = ApiClient.convertToType(data['grossExecCost'], 'Number');
      }
      if (data.hasOwnProperty('grossMarkValue')) {
        obj['grossMarkValue'] = ApiClient.convertToType(data['grossMarkValue'], 'Number');
      }
      if (data.hasOwnProperty('riskValue')) {
        obj['riskValue'] = ApiClient.convertToType(data['riskValue'], 'Number');
      }
      if (data.hasOwnProperty('taxableMargin')) {
        obj['taxableMargin'] = ApiClient.convertToType(data['taxableMargin'], 'Number');
      }
      if (data.hasOwnProperty('initMargin')) {
        obj['initMargin'] = ApiClient.convertToType(data['initMargin'], 'Number');
      }
      if (data.hasOwnProperty('maintMargin')) {
        obj['maintMargin'] = ApiClient.convertToType(data['maintMargin'], 'Number');
      }
      if (data.hasOwnProperty('sessionMargin')) {
        obj['sessionMargin'] = ApiClient.convertToType(data['sessionMargin'], 'Number');
      }
      if (data.hasOwnProperty('targetExcessMargin')) {
        obj['targetExcessMargin'] = ApiClient.convertToType(data['targetExcessMargin'], 'Number');
      }
      if (data.hasOwnProperty('varMargin')) {
        obj['varMargin'] = ApiClient.convertToType(data['varMargin'], 'Number');
      }
      if (data.hasOwnProperty('realisedPnl')) {
        obj['realisedPnl'] = ApiClient.convertToType(data['realisedPnl'], 'Number');
      }
      if (data.hasOwnProperty('unrealisedPnl')) {
        obj['unrealisedPnl'] = ApiClient.convertToType(data['unrealisedPnl'], 'Number');
      }
      if (data.hasOwnProperty('indicativeTax')) {
        obj['indicativeTax'] = ApiClient.convertToType(data['indicativeTax'], 'Number');
      }
      if (data.hasOwnProperty('unrealisedProfit')) {
        obj['unrealisedProfit'] = ApiClient.convertToType(data['unrealisedProfit'], 'Number');
      }
      if (data.hasOwnProperty('syntheticMargin')) {
        obj['syntheticMargin'] = ApiClient.convertToType(data['syntheticMargin'], 'Number');
      }
      if (data.hasOwnProperty('walletBalance')) {
        obj['walletBalance'] = ApiClient.convertToType(data['walletBalance'], 'Number');
      }
      if (data.hasOwnProperty('marginBalance')) {
        obj['marginBalance'] = ApiClient.convertToType(data['marginBalance'], 'Number');
      }
      if (data.hasOwnProperty('marginBalancePcnt')) {
        obj['marginBalancePcnt'] = ApiClient.convertToType(data['marginBalancePcnt'], 'Number');
      }
      if (data.hasOwnProperty('marginLeverage')) {
        obj['marginLeverage'] = ApiClient.convertToType(data['marginLeverage'], 'Number');
      }
      if (data.hasOwnProperty('marginUsedPcnt')) {
        obj['marginUsedPcnt'] = ApiClient.convertToType(data['marginUsedPcnt'], 'Number');
      }
      if (data.hasOwnProperty('excessMargin')) {
        obj['excessMargin'] = ApiClient.convertToType(data['excessMargin'], 'Number');
      }
      if (data.hasOwnProperty('excessMarginPcnt')) {
        obj['excessMarginPcnt'] = ApiClient.convertToType(data['excessMarginPcnt'], 'Number');
      }
      if (data.hasOwnProperty('availableMargin')) {
        obj['availableMargin'] = ApiClient.convertToType(data['availableMargin'], 'Number');
      }
      if (data.hasOwnProperty('withdrawableMargin')) {
        obj['withdrawableMargin'] = ApiClient.convertToType(data['withdrawableMargin'], 'Number');
      }
      if (data.hasOwnProperty('timestamp')) {
        obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
      }
      if (data.hasOwnProperty('grossLastValue')) {
        obj['grossLastValue'] = ApiClient.convertToType(data['grossLastValue'], 'Number');
      }
      if (data.hasOwnProperty('commission')) {
        obj['commission'] = ApiClient.convertToType(data['commission'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {Number} account
   */
  exports.prototype['account'] = undefined;
  /**
   * @member {String} currency
   */
  exports.prototype['currency'] = undefined;
  /**
   * @member {Number} riskLimit
   */
  exports.prototype['riskLimit'] = undefined;
  /**
   * @member {String} prevState
   */
  exports.prototype['prevState'] = undefined;
  /**
   * @member {String} state
   */
  exports.prototype['state'] = undefined;
  /**
   * @member {String} action
   */
  exports.prototype['action'] = undefined;
  /**
   * @member {Number} amount
   */
  exports.prototype['amount'] = undefined;
  /**
   * @member {Number} pendingCredit
   */
  exports.prototype['pendingCredit'] = undefined;
  /**
   * @member {Number} pendingDebit
   */
  exports.prototype['pendingDebit'] = undefined;
  /**
   * @member {Number} confirmedDebit
   */
  exports.prototype['confirmedDebit'] = undefined;
  /**
   * @member {Number} prevRealisedPnl
   */
  exports.prototype['prevRealisedPnl'] = undefined;
  /**
   * @member {Number} prevUnrealisedPnl
   */
  exports.prototype['prevUnrealisedPnl'] = undefined;
  /**
   * @member {Number} grossComm
   */
  exports.prototype['grossComm'] = undefined;
  /**
   * @member {Number} grossOpenCost
   */
  exports.prototype['grossOpenCost'] = undefined;
  /**
   * @member {Number} grossOpenPremium
   */
  exports.prototype['grossOpenPremium'] = undefined;
  /**
   * @member {Number} grossExecCost
   */
  exports.prototype['grossExecCost'] = undefined;
  /**
   * @member {Number} grossMarkValue
   */
  exports.prototype['grossMarkValue'] = undefined;
  /**
   * @member {Number} riskValue
   */
  exports.prototype['riskValue'] = undefined;
  /**
   * @member {Number} taxableMargin
   */
  exports.prototype['taxableMargin'] = undefined;
  /**
   * @member {Number} initMargin
   */
  exports.prototype['initMargin'] = undefined;
  /**
   * @member {Number} maintMargin
   */
  exports.prototype['maintMargin'] = undefined;
  /**
   * @member {Number} sessionMargin
   */
  exports.prototype['sessionMargin'] = undefined;
  /**
   * @member {Number} targetExcessMargin
   */
  exports.prototype['targetExcessMargin'] = undefined;
  /**
   * @member {Number} varMargin
   */
  exports.prototype['varMargin'] = undefined;
  /**
   * @member {Number} realisedPnl
   */
  exports.prototype['realisedPnl'] = undefined;
  /**
   * @member {Number} unrealisedPnl
   */
  exports.prototype['unrealisedPnl'] = undefined;
  /**
   * @member {Number} indicativeTax
   */
  exports.prototype['indicativeTax'] = undefined;
  /**
   * @member {Number} unrealisedProfit
   */
  exports.prototype['unrealisedProfit'] = undefined;
  /**
   * @member {Number} syntheticMargin
   */
  exports.prototype['syntheticMargin'] = undefined;
  /**
   * @member {Number} walletBalance
   */
  exports.prototype['walletBalance'] = undefined;
  /**
   * @member {Number} marginBalance
   */
  exports.prototype['marginBalance'] = undefined;
  /**
   * @member {Number} marginBalancePcnt
   * @default 0.0
   */
  exports.prototype['marginBalancePcnt'] = 0.0;
  /**
   * @member {Number} marginLeverage
   * @default 0.0
   */
  exports.prototype['marginLeverage'] = 0.0;
  /**
   * @member {Number} marginUsedPcnt
   * @default 0.0
   */
  exports.prototype['marginUsedPcnt'] = 0.0;
  /**
   * @member {Number} excessMargin
   */
  exports.prototype['excessMargin'] = undefined;
  /**
   * @member {Number} excessMarginPcnt
   * @default 0.0
   */
  exports.prototype['excessMarginPcnt'] = 0.0;
  /**
   * @member {Number} availableMargin
   */
  exports.prototype['availableMargin'] = undefined;
  /**
   * @member {Number} withdrawableMargin
   */
  exports.prototype['withdrawableMargin'] = undefined;
  /**
   * @member {Date} timestamp
   */
  exports.prototype['timestamp'] = undefined;
  /**
   * @member {Number} grossLastValue
   */
  exports.prototype['grossLastValue'] = undefined;
  /**
   * @member {Number} commission
   * @default 0.0
   */
  exports.prototype['commission'] = 0.0;



  return exports;
}));


