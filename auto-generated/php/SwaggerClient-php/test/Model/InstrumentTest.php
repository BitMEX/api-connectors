<?php
/**
 * InstrumentTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BitMEX API
 *
 * ## REST API for the BitMEX Trading Platform  [View Changelog](/app/apiChangelog)    #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  *All* table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  *This is only a small subset of what is available, to get you started.*  Fill in the parameters and click the `Try it out!` button to try any of these queries.  * [Pricing Data](#!/Quote/Quote_get)  * [Trade Data](#!/Trade/Trade_get)  * [OrderBook Data](#!/OrderBook/OrderBook_getL2)  * [Settlement Data](#!/Settlement/Settlement_get)  * [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [⇩ Download Swagger JSON](swagger.json)    ## All API Endpoints  Click to expand a section.
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * InstrumentTest Class Doc Comment
 *
 * @category    Class
 * @description Tradeable Contracts, Indices, and History
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class InstrumentTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Instrument"
     */
    public function testInstrument()
    {
    }

    /**
     * Test attribute "symbol"
     */
    public function testPropertySymbol()
    {
    }

    /**
     * Test attribute "root_symbol"
     */
    public function testPropertyRootSymbol()
    {
    }

    /**
     * Test attribute "state"
     */
    public function testPropertyState()
    {
    }

    /**
     * Test attribute "typ"
     */
    public function testPropertyTyp()
    {
    }

    /**
     * Test attribute "listing"
     */
    public function testPropertyListing()
    {
    }

    /**
     * Test attribute "front"
     */
    public function testPropertyFront()
    {
    }

    /**
     * Test attribute "expiry"
     */
    public function testPropertyExpiry()
    {
    }

    /**
     * Test attribute "settle"
     */
    public function testPropertySettle()
    {
    }

    /**
     * Test attribute "relist_interval"
     */
    public function testPropertyRelistInterval()
    {
    }

    /**
     * Test attribute "inverse_leg"
     */
    public function testPropertyInverseLeg()
    {
    }

    /**
     * Test attribute "sell_leg"
     */
    public function testPropertySellLeg()
    {
    }

    /**
     * Test attribute "buy_leg"
     */
    public function testPropertyBuyLeg()
    {
    }

    /**
     * Test attribute "option_strike_pcnt"
     */
    public function testPropertyOptionStrikePcnt()
    {
    }

    /**
     * Test attribute "option_strike_round"
     */
    public function testPropertyOptionStrikeRound()
    {
    }

    /**
     * Test attribute "option_strike_price"
     */
    public function testPropertyOptionStrikePrice()
    {
    }

    /**
     * Test attribute "option_multiplier"
     */
    public function testPropertyOptionMultiplier()
    {
    }

    /**
     * Test attribute "position_currency"
     */
    public function testPropertyPositionCurrency()
    {
    }

    /**
     * Test attribute "underlying"
     */
    public function testPropertyUnderlying()
    {
    }

    /**
     * Test attribute "quote_currency"
     */
    public function testPropertyQuoteCurrency()
    {
    }

    /**
     * Test attribute "underlying_symbol"
     */
    public function testPropertyUnderlyingSymbol()
    {
    }

    /**
     * Test attribute "reference"
     */
    public function testPropertyReference()
    {
    }

    /**
     * Test attribute "reference_symbol"
     */
    public function testPropertyReferenceSymbol()
    {
    }

    /**
     * Test attribute "calc_interval"
     */
    public function testPropertyCalcInterval()
    {
    }

    /**
     * Test attribute "publish_interval"
     */
    public function testPropertyPublishInterval()
    {
    }

    /**
     * Test attribute "publish_time"
     */
    public function testPropertyPublishTime()
    {
    }

    /**
     * Test attribute "max_order_qty"
     */
    public function testPropertyMaxOrderQty()
    {
    }

    /**
     * Test attribute "max_price"
     */
    public function testPropertyMaxPrice()
    {
    }

    /**
     * Test attribute "lot_size"
     */
    public function testPropertyLotSize()
    {
    }

    /**
     * Test attribute "tick_size"
     */
    public function testPropertyTickSize()
    {
    }

    /**
     * Test attribute "multiplier"
     */
    public function testPropertyMultiplier()
    {
    }

    /**
     * Test attribute "settl_currency"
     */
    public function testPropertySettlCurrency()
    {
    }

    /**
     * Test attribute "underlying_to_position_multiplier"
     */
    public function testPropertyUnderlyingToPositionMultiplier()
    {
    }

    /**
     * Test attribute "underlying_to_settle_multiplier"
     */
    public function testPropertyUnderlyingToSettleMultiplier()
    {
    }

    /**
     * Test attribute "quote_to_settle_multiplier"
     */
    public function testPropertyQuoteToSettleMultiplier()
    {
    }

    /**
     * Test attribute "is_quanto"
     */
    public function testPropertyIsQuanto()
    {
    }

    /**
     * Test attribute "is_inverse"
     */
    public function testPropertyIsInverse()
    {
    }

    /**
     * Test attribute "init_margin"
     */
    public function testPropertyInitMargin()
    {
    }

    /**
     * Test attribute "maint_margin"
     */
    public function testPropertyMaintMargin()
    {
    }

    /**
     * Test attribute "risk_limit"
     */
    public function testPropertyRiskLimit()
    {
    }

    /**
     * Test attribute "risk_step"
     */
    public function testPropertyRiskStep()
    {
    }

    /**
     * Test attribute "limit"
     */
    public function testPropertyLimit()
    {
    }

    /**
     * Test attribute "capped"
     */
    public function testPropertyCapped()
    {
    }

    /**
     * Test attribute "taxed"
     */
    public function testPropertyTaxed()
    {
    }

    /**
     * Test attribute "deleverage"
     */
    public function testPropertyDeleverage()
    {
    }

    /**
     * Test attribute "maker_fee"
     */
    public function testPropertyMakerFee()
    {
    }

    /**
     * Test attribute "taker_fee"
     */
    public function testPropertyTakerFee()
    {
    }

    /**
     * Test attribute "settlement_fee"
     */
    public function testPropertySettlementFee()
    {
    }

    /**
     * Test attribute "insurance_fee"
     */
    public function testPropertyInsuranceFee()
    {
    }

    /**
     * Test attribute "funding_base_symbol"
     */
    public function testPropertyFundingBaseSymbol()
    {
    }

    /**
     * Test attribute "funding_quote_symbol"
     */
    public function testPropertyFundingQuoteSymbol()
    {
    }

    /**
     * Test attribute "funding_premium_symbol"
     */
    public function testPropertyFundingPremiumSymbol()
    {
    }

    /**
     * Test attribute "funding_timestamp"
     */
    public function testPropertyFundingTimestamp()
    {
    }

    /**
     * Test attribute "funding_interval"
     */
    public function testPropertyFundingInterval()
    {
    }

    /**
     * Test attribute "funding_rate"
     */
    public function testPropertyFundingRate()
    {
    }

    /**
     * Test attribute "indicative_funding_rate"
     */
    public function testPropertyIndicativeFundingRate()
    {
    }

    /**
     * Test attribute "rebalance_timestamp"
     */
    public function testPropertyRebalanceTimestamp()
    {
    }

    /**
     * Test attribute "rebalance_interval"
     */
    public function testPropertyRebalanceInterval()
    {
    }

    /**
     * Test attribute "opening_timestamp"
     */
    public function testPropertyOpeningTimestamp()
    {
    }

    /**
     * Test attribute "closing_timestamp"
     */
    public function testPropertyClosingTimestamp()
    {
    }

    /**
     * Test attribute "session_interval"
     */
    public function testPropertySessionInterval()
    {
    }

    /**
     * Test attribute "prev_close_price"
     */
    public function testPropertyPrevClosePrice()
    {
    }

    /**
     * Test attribute "limit_down_price"
     */
    public function testPropertyLimitDownPrice()
    {
    }

    /**
     * Test attribute "limit_up_price"
     */
    public function testPropertyLimitUpPrice()
    {
    }

    /**
     * Test attribute "bankrupt_limit_down_price"
     */
    public function testPropertyBankruptLimitDownPrice()
    {
    }

    /**
     * Test attribute "bankrupt_limit_up_price"
     */
    public function testPropertyBankruptLimitUpPrice()
    {
    }

    /**
     * Test attribute "prev_total_volume"
     */
    public function testPropertyPrevTotalVolume()
    {
    }

    /**
     * Test attribute "total_volume"
     */
    public function testPropertyTotalVolume()
    {
    }

    /**
     * Test attribute "volume"
     */
    public function testPropertyVolume()
    {
    }

    /**
     * Test attribute "volume24h"
     */
    public function testPropertyVolume24h()
    {
    }

    /**
     * Test attribute "prev_total_turnover"
     */
    public function testPropertyPrevTotalTurnover()
    {
    }

    /**
     * Test attribute "total_turnover"
     */
    public function testPropertyTotalTurnover()
    {
    }

    /**
     * Test attribute "turnover"
     */
    public function testPropertyTurnover()
    {
    }

    /**
     * Test attribute "turnover24h"
     */
    public function testPropertyTurnover24h()
    {
    }

    /**
     * Test attribute "prev_price24h"
     */
    public function testPropertyPrevPrice24h()
    {
    }

    /**
     * Test attribute "vwap"
     */
    public function testPropertyVwap()
    {
    }

    /**
     * Test attribute "high_price"
     */
    public function testPropertyHighPrice()
    {
    }

    /**
     * Test attribute "low_price"
     */
    public function testPropertyLowPrice()
    {
    }

    /**
     * Test attribute "last_price"
     */
    public function testPropertyLastPrice()
    {
    }

    /**
     * Test attribute "last_price_protected"
     */
    public function testPropertyLastPriceProtected()
    {
    }

    /**
     * Test attribute "last_tick_direction"
     */
    public function testPropertyLastTickDirection()
    {
    }

    /**
     * Test attribute "last_change_pcnt"
     */
    public function testPropertyLastChangePcnt()
    {
    }

    /**
     * Test attribute "bid_price"
     */
    public function testPropertyBidPrice()
    {
    }

    /**
     * Test attribute "mid_price"
     */
    public function testPropertyMidPrice()
    {
    }

    /**
     * Test attribute "ask_price"
     */
    public function testPropertyAskPrice()
    {
    }

    /**
     * Test attribute "impact_bid_price"
     */
    public function testPropertyImpactBidPrice()
    {
    }

    /**
     * Test attribute "impact_mid_price"
     */
    public function testPropertyImpactMidPrice()
    {
    }

    /**
     * Test attribute "impact_ask_price"
     */
    public function testPropertyImpactAskPrice()
    {
    }

    /**
     * Test attribute "has_liquidity"
     */
    public function testPropertyHasLiquidity()
    {
    }

    /**
     * Test attribute "open_interest"
     */
    public function testPropertyOpenInterest()
    {
    }

    /**
     * Test attribute "open_value"
     */
    public function testPropertyOpenValue()
    {
    }

    /**
     * Test attribute "fair_method"
     */
    public function testPropertyFairMethod()
    {
    }

    /**
     * Test attribute "fair_basis_rate"
     */
    public function testPropertyFairBasisRate()
    {
    }

    /**
     * Test attribute "fair_basis"
     */
    public function testPropertyFairBasis()
    {
    }

    /**
     * Test attribute "fair_price"
     */
    public function testPropertyFairPrice()
    {
    }

    /**
     * Test attribute "mark_method"
     */
    public function testPropertyMarkMethod()
    {
    }

    /**
     * Test attribute "mark_price"
     */
    public function testPropertyMarkPrice()
    {
    }

    /**
     * Test attribute "indicative_tax_rate"
     */
    public function testPropertyIndicativeTaxRate()
    {
    }

    /**
     * Test attribute "indicative_settle_price"
     */
    public function testPropertyIndicativeSettlePrice()
    {
    }

    /**
     * Test attribute "option_underlying_price"
     */
    public function testPropertyOptionUnderlyingPrice()
    {
    }

    /**
     * Test attribute "settled_price"
     */
    public function testPropertySettledPrice()
    {
    }

    /**
     * Test attribute "timestamp"
     */
    public function testPropertyTimestamp()
    {
    }
}
