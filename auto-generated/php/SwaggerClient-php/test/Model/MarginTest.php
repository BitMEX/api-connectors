<?php
/**
 * MarginTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BitMEX API
 *
 * ## REST API for the BitMEX Trading Platform  [View Changelog](/app/apiChangelog)    #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  *All* table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  *This is only a small subset of what is available, to get you started.*  Fill in the parameters and click the `Try it out!` button to try any of these queries.  * [Pricing Data](#!/Quote/Quote_get)  * [Trade Data](#!/Trade/Trade_get)  * [OrderBook Data](#!/OrderBook/OrderBook_getL2)  * [Settlement Data](#!/Settlement/Settlement_get)  * [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [⇩ Download Swagger JSON](swagger.json)    ## All API Endpoints  Click to expand a section.
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * MarginTest Class Doc Comment
 *
 * @category    Class
 * @description Margin
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class MarginTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Margin"
     */
    public function testMargin()
    {
    }

    /**
     * Test attribute "account"
     */
    public function testPropertyAccount()
    {
    }

    /**
     * Test attribute "currency"
     */
    public function testPropertyCurrency()
    {
    }

    /**
     * Test attribute "risk_limit"
     */
    public function testPropertyRiskLimit()
    {
    }

    /**
     * Test attribute "prev_state"
     */
    public function testPropertyPrevState()
    {
    }

    /**
     * Test attribute "state"
     */
    public function testPropertyState()
    {
    }

    /**
     * Test attribute "action"
     */
    public function testPropertyAction()
    {
    }

    /**
     * Test attribute "amount"
     */
    public function testPropertyAmount()
    {
    }

    /**
     * Test attribute "pending_credit"
     */
    public function testPropertyPendingCredit()
    {
    }

    /**
     * Test attribute "pending_debit"
     */
    public function testPropertyPendingDebit()
    {
    }

    /**
     * Test attribute "confirmed_debit"
     */
    public function testPropertyConfirmedDebit()
    {
    }

    /**
     * Test attribute "prev_realised_pnl"
     */
    public function testPropertyPrevRealisedPnl()
    {
    }

    /**
     * Test attribute "prev_unrealised_pnl"
     */
    public function testPropertyPrevUnrealisedPnl()
    {
    }

    /**
     * Test attribute "gross_comm"
     */
    public function testPropertyGrossComm()
    {
    }

    /**
     * Test attribute "gross_open_cost"
     */
    public function testPropertyGrossOpenCost()
    {
    }

    /**
     * Test attribute "gross_open_premium"
     */
    public function testPropertyGrossOpenPremium()
    {
    }

    /**
     * Test attribute "gross_exec_cost"
     */
    public function testPropertyGrossExecCost()
    {
    }

    /**
     * Test attribute "gross_mark_value"
     */
    public function testPropertyGrossMarkValue()
    {
    }

    /**
     * Test attribute "risk_value"
     */
    public function testPropertyRiskValue()
    {
    }

    /**
     * Test attribute "taxable_margin"
     */
    public function testPropertyTaxableMargin()
    {
    }

    /**
     * Test attribute "init_margin"
     */
    public function testPropertyInitMargin()
    {
    }

    /**
     * Test attribute "maint_margin"
     */
    public function testPropertyMaintMargin()
    {
    }

    /**
     * Test attribute "session_margin"
     */
    public function testPropertySessionMargin()
    {
    }

    /**
     * Test attribute "target_excess_margin"
     */
    public function testPropertyTargetExcessMargin()
    {
    }

    /**
     * Test attribute "var_margin"
     */
    public function testPropertyVarMargin()
    {
    }

    /**
     * Test attribute "realised_pnl"
     */
    public function testPropertyRealisedPnl()
    {
    }

    /**
     * Test attribute "unrealised_pnl"
     */
    public function testPropertyUnrealisedPnl()
    {
    }

    /**
     * Test attribute "indicative_tax"
     */
    public function testPropertyIndicativeTax()
    {
    }

    /**
     * Test attribute "unrealised_profit"
     */
    public function testPropertyUnrealisedProfit()
    {
    }

    /**
     * Test attribute "synthetic_margin"
     */
    public function testPropertySyntheticMargin()
    {
    }

    /**
     * Test attribute "wallet_balance"
     */
    public function testPropertyWalletBalance()
    {
    }

    /**
     * Test attribute "margin_balance"
     */
    public function testPropertyMarginBalance()
    {
    }

    /**
     * Test attribute "margin_balance_pcnt"
     */
    public function testPropertyMarginBalancePcnt()
    {
    }

    /**
     * Test attribute "margin_leverage"
     */
    public function testPropertyMarginLeverage()
    {
    }

    /**
     * Test attribute "margin_used_pcnt"
     */
    public function testPropertyMarginUsedPcnt()
    {
    }

    /**
     * Test attribute "excess_margin"
     */
    public function testPropertyExcessMargin()
    {
    }

    /**
     * Test attribute "excess_margin_pcnt"
     */
    public function testPropertyExcessMarginPcnt()
    {
    }

    /**
     * Test attribute "available_margin"
     */
    public function testPropertyAvailableMargin()
    {
    }

    /**
     * Test attribute "withdrawable_margin"
     */
    public function testPropertyWithdrawableMargin()
    {
    }

    /**
     * Test attribute "timestamp"
     */
    public function testPropertyTimestamp()
    {
    }

    /**
     * Test attribute "gross_last_value"
     */
    public function testPropertyGrossLastValue()
    {
    }

    /**
     * Test attribute "commission"
     */
    public function testPropertyCommission()
    {
    }
}
