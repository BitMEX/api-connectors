/**
 * BitMEX API
 * ## REST API for the BitMEX Trading Platform  [View Changelog](/app/apiChangelog)    #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  *All* table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  *This is only a small subset of what is available, to get you started.*  Fill in the parameters and click the `Try it out!` button to try any of these queries.  * [Pricing Data](#!/Quote/Quote_get)  * [Trade Data](#!/Trade/Trade_get)  * [OrderBook Data](#!/OrderBook/OrderBook_getL2)  * [Settlement Data](#!/Settlement/Settlement_get)  * [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [â‡© Download Swagger JSON](swagger.json)    ## All API Endpoints  Click to expand a section. 
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SWGStatsHistory.h
 *
 * 
 */

#ifndef SWGStatsHistory_H_
#define SWGStatsHistory_H_

#include <QJsonObject>


#include "SWGNumber.h"
#include <QDateTime>
#include <QString>

#include "SWGObject.h"

namespace Swagger {

class SWGStatsHistory: public SWGObject {
public:
    SWGStatsHistory();
    SWGStatsHistory(QString json);
    ~SWGStatsHistory();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    SWGStatsHistory* fromJson(QString jsonString) override;

    QDateTime* getDate();
    void setDate(QDateTime* date);

    QString* getRootSymbol();
    void setRootSymbol(QString* root_symbol);

    QString* getCurrency();
    void setCurrency(QString* currency);

    SWGNumber* getVolume();
    void setVolume(SWGNumber* volume);

    SWGNumber* getTurnover();
    void setTurnover(SWGNumber* turnover);


    virtual bool isSet() override;

private:
    QDateTime* date;
    bool m_date_isSet;

    QString* root_symbol;
    bool m_root_symbol_isSet;

    QString* currency;
    bool m_currency_isSet;

    SWGNumber* volume;
    bool m_volume_isSet;

    SWGNumber* turnover;
    bool m_turnover_isSet;

};

}

#endif /* SWGStatsHistory_H_ */
