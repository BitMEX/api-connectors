/**
 * BitMEX API
 * ## REST API for the BitMEX Trading Platform  [View Changelog](/app/apiChangelog)    #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  *All* table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  *This is only a small subset of what is available, to get you started.*  Fill in the parameters and click the `Try it out!` button to try any of these queries.  * [Pricing Data](#!/Quote/Quote_get)  * [Trade Data](#!/Trade/Trade_get)  * [OrderBook Data](#!/OrderBook/OrderBook_getL2)  * [Settlement Data](#!/Settlement/Settlement_get)  * [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [â‡© Download Swagger JSON](swagger.json)    ## All API Endpoints  Click to expand a section. 
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model

import java.util.Date

case class Order (
  orderID: String,
  clOrdID: Option[String] = None,
  clOrdLinkID: Option[String] = None,
  account: Option[Number] = None,
  symbol: Option[String] = None,
  side: Option[String] = None,
  simpleOrderQty: Option[Double] = None,
  orderQty: Option[Number] = None,
  price: Option[Double] = None,
  displayQty: Option[Number] = None,
  stopPx: Option[Double] = None,
  pegOffsetValue: Option[Double] = None,
  pegPriceType: Option[String] = None,
  currency: Option[String] = None,
  settlCurrency: Option[String] = None,
  ordType: Option[String] = None,
  timeInForce: Option[String] = None,
  execInst: Option[String] = None,
  contingencyType: Option[String] = None,
  exDestination: Option[String] = None,
  ordStatus: Option[String] = None,
  triggered: Option[String] = None,
  workingIndicator: Option[Boolean] = None,
  ordRejReason: Option[String] = None,
  simpleLeavesQty: Option[Double] = None,
  leavesQty: Option[Number] = None,
  simpleCumQty: Option[Double] = None,
  cumQty: Option[Number] = None,
  avgPx: Option[Double] = None,
  multiLegReportingType: Option[String] = None,
  text: Option[String] = None,
  transactTime: Option[Date] = None,
  timestamp: Option[Date] = None
)

