//
// AnnouncementAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class AnnouncementAPI {
    /**
     Get site announcements.
     
     - parameter columns: (query) Array of column names to fetch. If omitted, will return all columns. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func announcementGet(columns: String? = nil, completion: @escaping ((_ data: [Announcement]?,_ error: Error?) -> Void)) {
        announcementGetWithRequestBuilder(columns: columns).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get site announcements.
     - GET /announcement
     - examples: [{contentType=application/json, example=[ {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "link" : "link",
  "id" : 0.80082819046101150206595775671303272247314453125,
  "title" : "title",
  "content" : "content"
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "link" : "link",
  "id" : 0.80082819046101150206595775671303272247314453125,
  "title" : "title",
  "content" : "content"
} ]}]
     
     - parameter columns: (query) Array of column names to fetch. If omitted, will return all columns. (optional)

     - returns: RequestBuilder<[Announcement]> 
     */
    open class func announcementGetWithRequestBuilder(columns: String? = nil) -> RequestBuilder<[Announcement]> {
        let path = "/announcement"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "columns": columns
        ])

        let requestBuilder: RequestBuilder<[Announcement]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get urgent (banner) announcements.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func announcementGetUrgent(completion: @escaping ((_ data: [Announcement]?,_ error: Error?) -> Void)) {
        announcementGetUrgentWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get urgent (banner) announcements.
     - GET /announcement/urgent
     - API Key:
       - type: apiKey api-key 
       - name: apiKey
     - API Key:
       - type: apiKey api-nonce 
       - name: apiNonce
     - API Key:
       - type: apiKey api-signature 
       - name: apiSignature
     - examples: [{contentType=application/json, example=[ {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "link" : "link",
  "id" : 0.80082819046101150206595775671303272247314453125,
  "title" : "title",
  "content" : "content"
}, {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "link" : "link",
  "id" : 0.80082819046101150206595775671303272247314453125,
  "title" : "title",
  "content" : "content"
} ]}]

     - returns: RequestBuilder<[Announcement]> 
     */
    open class func announcementGetUrgentWithRequestBuilder() -> RequestBuilder<[Announcement]> {
        let path = "/announcement/urgent"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[Announcement]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
