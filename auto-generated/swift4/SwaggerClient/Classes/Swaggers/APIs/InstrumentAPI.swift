//
// InstrumentAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class InstrumentAPI {
    /**
     Get instruments.
     
     - parameter symbol: (query) Instrument symbol. Send a bare series (e.g. XBU) to get data for the nearest expiring contract in that series.  You can also send a timeframe, e.g. &#x60;XBU:monthly&#x60;. Timeframes are &#x60;daily&#x60;, &#x60;weekly&#x60;, &#x60;monthly&#x60;, &#x60;quarterly&#x60;, and &#x60;biquarterly&#x60;. (optional)
     - parameter filter: (query) Generic table filter. Send JSON key/value pairs, such as &#x60;{\&quot;key\&quot;: \&quot;value\&quot;}&#x60;. You can key on individual fields, and do more advanced querying on timestamps. See the [Timestamp Docs](https://www.bitmex.com/app/restAPI#Timestamp-Filters) for more details. (optional)
     - parameter columns: (query) Array of column names to fetch. If omitted, will return all columns.  Note that this method will always return item keys, even when not specified, so you may receive more columns that you expect. (optional)
     - parameter count: (query) Number of results to fetch. (optional, default to 100)
     - parameter start: (query) Starting point for results. (optional, default to 0)
     - parameter reverse: (query) If true, will sort results newest first. (optional, default to false)
     - parameter startTime: (query) Starting date filter for results. (optional)
     - parameter endTime: (query) Ending date filter for results. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func instrumentGet(symbol: String? = nil, filter: String? = nil, columns: String? = nil, count: Double? = nil, start: Double? = nil, reverse: Bool? = nil, startTime: Date? = nil, endTime: Date? = nil, completion: @escaping ((_ data: [Instrument]?,_ error: Error?) -> Void)) {
        instrumentGetWithRequestBuilder(symbol: symbol, filter: filter, columns: columns, count: count, start: start, reverse: reverse, startTime: startTime, endTime: endTime).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get instruments.
     - GET /instrument
     - This returns all instruments and indices, including those that have settled or are unlisted. Use this endpoint if you want to query for individual instruments or use a complex filter. Use `/instrument/active` to return active instruments, or use a filter like `{\"state\": \"Open\"}`.
     - examples: [{contentType=application/json, example=[ {
  "optionUnderlyingPrice" : 0.8774076871421566,
  "deleverage" : true,
  "riskLimit" : 1.489415909854170383397331534069962799549102783203125,
  "fundingBaseSymbol" : "fundingBaseSymbol",
  "prevPrice24h" : 7.143538047012306,
  "highPrice" : 7.058770351582356,
  "fairMethod" : "fairMethod",
  "taxed" : true,
  "state" : "state",
  "expiry" : "2000-01-23T04:56:07.000+00:00",
  "fundingPremiumSymbol" : "fundingPremiumSymbol",
  "publishInterval" : "2000-01-23T04:56:07.000+00:00",
  "publishTime" : "2000-01-23T04:56:07.000+00:00",
  "maintMargin" : 1.0246457001441578,
  "takerFee" : 4.965218492984954,
  "fairBasis" : 4.258773108174356,
  "volume24h" : 6.87805222012787620400331434211693704128265380859375,
  "underlying" : "underlying",
  "quoteToSettleMultiplier" : 7.3862819483858839220147274318151175975799560546875,
  "fundingQuoteSymbol" : "fundingQuoteSymbol",
  "quoteCurrency" : "quoteCurrency",
  "indicativeSettlePrice" : 9.132027271330688,
  "settledPrice" : 9.702963800023566,
  "relistInterval" : "2000-01-23T04:56:07.000+00:00",
  "prevClosePrice" : 8.762042012749001,
  "maxPrice" : 2.3021358869347655,
  "underlyingToPositionMultiplier" : 2.027123023002321833274663731572218239307403564453125,
  "settle" : "2000-01-23T04:56:07.000+00:00",
  "buyLeg" : "buyLeg",
  "tickSize" : 9.301444243932576,
  "markPrice" : 4.678947989005849,
  "settlCurrency" : "settlCurrency",
  "listing" : "2000-01-23T04:56:07.000+00:00",
  "indicativeFundingRate" : 6.683562403749608,
  "positionCurrency" : "positionCurrency",
  "timestamp" : "2000-01-23T04:56:07.000+00:00",
  "limitDownPrice" : 9.018348186070783,
  "lastTickDirection" : "lastTickDirection",
  "rebalanceTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "fairBasisRate" : 6.628464275087742,
  "lastPriceProtected" : 4.652396432933246,
  "midPrice" : 3.0205796992916243,
  "insuranceFee" : 9.965781217890562,
  "optionStrikePrice" : 1.4658129805029452,
  "limitUpPrice" : 6.438423552598547,
  "bankruptLimitUpPrice" : 6.965117697638846,
  "rebalanceInterval" : "2000-01-23T04:56:07.000+00:00",
  "fundingRate" : 9.369310271410669,
  "lastPrice" : 0.10263654006109402,
  "totalVolume" : 2.884162126668780246063761296682059764862060546875,
  "symbol" : "symbol",
  "capped" : true,
  "vwap" : 0.8851374739011653,
  "closingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "typ" : "typ",
  "inverseLeg" : "inverseLeg",
  "reference" : "reference",
  "prevTotalTurnover" : 5.94489560761401580890606055618263781070709228515625,
  "limit" : 7.457744773683766,
  "calcInterval" : "2000-01-23T04:56:07.000+00:00",
  "lastChangePcnt" : 8.969578798196912,
  "askPrice" : 3.0576100241049344,
  "multiplier" : 3.61607674925191080461672754609026014804840087890625,
  "indicativeTaxRate" : 7.260521264802104,
  "settlementFee" : 5.025004791520295,
  "totalTurnover" : 6.70401929795003592715829654480330646038055419921875,
  "turnover24h" : 3.093745262666447448651751983561553061008453369140625,
  "fairPrice" : 1.041444916118296,
  "bidPrice" : 7.740351818741173,
  "volume" : 6.77832496304801335185175048536621034145355224609375,
  "impactMidPrice" : 5.533258397034986,
  "sellLeg" : "sellLeg",
  "optionStrikePcnt" : 0.8008281904610115,
  "maxOrderQty" : 5.63737665663332876420099637471139430999755859375,
  "hasLiquidity" : true,
  "openInterest" : 4.078845849666752343409825698472559452056884765625,
  "riskStep" : 6.8468526983526398765889098285697400569915771484375,
  "optionStrikeRound" : 6.027456183070403,
  "isQuanto" : true,
  "rootSymbol" : "rootSymbol",
  "markMethod" : "markMethod",
  "underlyingSymbol" : "underlyingSymbol",
  "fundingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "makerFee" : 1.1730742509559433,
  "lowPrice" : 6.519180951018382,
  "underlyingToSettleMultiplier" : 4.1456080298839363962315474054776132106781005859375,
  "sessionInterval" : "2000-01-23T04:56:07.000+00:00",
  "fundingInterval" : "2000-01-23T04:56:07.000+00:00",
  "bankruptLimitDownPrice" : 3.5571952270680973,
  "turnover" : 3.35319334701124294184637619764544069766998291015625,
  "impactAskPrice" : 3.2588565619047607,
  "referenceSymbol" : "referenceSymbol",
  "openValue" : 0.202532411323639305322785730822943150997161865234375,
  "isInverse" : true,
  "lotSize" : 7.061401241503109105224211816675961017608642578125,
  "optionMultiplier" : 5.962133916683182,
  "openingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "impactBidPrice" : 7.04836565559697,
  "prevTotalVolume" : 1.2846590061165319429647979632136411964893341064453125,
  "initMargin" : 1.2315135367772556,
  "front" : "2000-01-23T04:56:07.000+00:00"
}, {
  "optionUnderlyingPrice" : 0.8774076871421566,
  "deleverage" : true,
  "riskLimit" : 1.489415909854170383397331534069962799549102783203125,
  "fundingBaseSymbol" : "fundingBaseSymbol",
  "prevPrice24h" : 7.143538047012306,
  "highPrice" : 7.058770351582356,
  "fairMethod" : "fairMethod",
  "taxed" : true,
  "state" : "state",
  "expiry" : "2000-01-23T04:56:07.000+00:00",
  "fundingPremiumSymbol" : "fundingPremiumSymbol",
  "publishInterval" : "2000-01-23T04:56:07.000+00:00",
  "publishTime" : "2000-01-23T04:56:07.000+00:00",
  "maintMargin" : 1.0246457001441578,
  "takerFee" : 4.965218492984954,
  "fairBasis" : 4.258773108174356,
  "volume24h" : 6.87805222012787620400331434211693704128265380859375,
  "underlying" : "underlying",
  "quoteToSettleMultiplier" : 7.3862819483858839220147274318151175975799560546875,
  "fundingQuoteSymbol" : "fundingQuoteSymbol",
  "quoteCurrency" : "quoteCurrency",
  "indicativeSettlePrice" : 9.132027271330688,
  "settledPrice" : 9.702963800023566,
  "relistInterval" : "2000-01-23T04:56:07.000+00:00",
  "prevClosePrice" : 8.762042012749001,
  "maxPrice" : 2.3021358869347655,
  "underlyingToPositionMultiplier" : 2.027123023002321833274663731572218239307403564453125,
  "settle" : "2000-01-23T04:56:07.000+00:00",
  "buyLeg" : "buyLeg",
  "tickSize" : 9.301444243932576,
  "markPrice" : 4.678947989005849,
  "settlCurrency" : "settlCurrency",
  "listing" : "2000-01-23T04:56:07.000+00:00",
  "indicativeFundingRate" : 6.683562403749608,
  "positionCurrency" : "positionCurrency",
  "timestamp" : "2000-01-23T04:56:07.000+00:00",
  "limitDownPrice" : 9.018348186070783,
  "lastTickDirection" : "lastTickDirection",
  "rebalanceTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "fairBasisRate" : 6.628464275087742,
  "lastPriceProtected" : 4.652396432933246,
  "midPrice" : 3.0205796992916243,
  "insuranceFee" : 9.965781217890562,
  "optionStrikePrice" : 1.4658129805029452,
  "limitUpPrice" : 6.438423552598547,
  "bankruptLimitUpPrice" : 6.965117697638846,
  "rebalanceInterval" : "2000-01-23T04:56:07.000+00:00",
  "fundingRate" : 9.369310271410669,
  "lastPrice" : 0.10263654006109402,
  "totalVolume" : 2.884162126668780246063761296682059764862060546875,
  "symbol" : "symbol",
  "capped" : true,
  "vwap" : 0.8851374739011653,
  "closingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "typ" : "typ",
  "inverseLeg" : "inverseLeg",
  "reference" : "reference",
  "prevTotalTurnover" : 5.94489560761401580890606055618263781070709228515625,
  "limit" : 7.457744773683766,
  "calcInterval" : "2000-01-23T04:56:07.000+00:00",
  "lastChangePcnt" : 8.969578798196912,
  "askPrice" : 3.0576100241049344,
  "multiplier" : 3.61607674925191080461672754609026014804840087890625,
  "indicativeTaxRate" : 7.260521264802104,
  "settlementFee" : 5.025004791520295,
  "totalTurnover" : 6.70401929795003592715829654480330646038055419921875,
  "turnover24h" : 3.093745262666447448651751983561553061008453369140625,
  "fairPrice" : 1.041444916118296,
  "bidPrice" : 7.740351818741173,
  "volume" : 6.77832496304801335185175048536621034145355224609375,
  "impactMidPrice" : 5.533258397034986,
  "sellLeg" : "sellLeg",
  "optionStrikePcnt" : 0.8008281904610115,
  "maxOrderQty" : 5.63737665663332876420099637471139430999755859375,
  "hasLiquidity" : true,
  "openInterest" : 4.078845849666752343409825698472559452056884765625,
  "riskStep" : 6.8468526983526398765889098285697400569915771484375,
  "optionStrikeRound" : 6.027456183070403,
  "isQuanto" : true,
  "rootSymbol" : "rootSymbol",
  "markMethod" : "markMethod",
  "underlyingSymbol" : "underlyingSymbol",
  "fundingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "makerFee" : 1.1730742509559433,
  "lowPrice" : 6.519180951018382,
  "underlyingToSettleMultiplier" : 4.1456080298839363962315474054776132106781005859375,
  "sessionInterval" : "2000-01-23T04:56:07.000+00:00",
  "fundingInterval" : "2000-01-23T04:56:07.000+00:00",
  "bankruptLimitDownPrice" : 3.5571952270680973,
  "turnover" : 3.35319334701124294184637619764544069766998291015625,
  "impactAskPrice" : 3.2588565619047607,
  "referenceSymbol" : "referenceSymbol",
  "openValue" : 0.202532411323639305322785730822943150997161865234375,
  "isInverse" : true,
  "lotSize" : 7.061401241503109105224211816675961017608642578125,
  "optionMultiplier" : 5.962133916683182,
  "openingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "impactBidPrice" : 7.04836565559697,
  "prevTotalVolume" : 1.2846590061165319429647979632136411964893341064453125,
  "initMargin" : 1.2315135367772556,
  "front" : "2000-01-23T04:56:07.000+00:00"
} ]}]
     
     - parameter symbol: (query) Instrument symbol. Send a bare series (e.g. XBU) to get data for the nearest expiring contract in that series.  You can also send a timeframe, e.g. &#x60;XBU:monthly&#x60;. Timeframes are &#x60;daily&#x60;, &#x60;weekly&#x60;, &#x60;monthly&#x60;, &#x60;quarterly&#x60;, and &#x60;biquarterly&#x60;. (optional)
     - parameter filter: (query) Generic table filter. Send JSON key/value pairs, such as &#x60;{\&quot;key\&quot;: \&quot;value\&quot;}&#x60;. You can key on individual fields, and do more advanced querying on timestamps. See the [Timestamp Docs](https://www.bitmex.com/app/restAPI#Timestamp-Filters) for more details. (optional)
     - parameter columns: (query) Array of column names to fetch. If omitted, will return all columns.  Note that this method will always return item keys, even when not specified, so you may receive more columns that you expect. (optional)
     - parameter count: (query) Number of results to fetch. (optional, default to 100)
     - parameter start: (query) Starting point for results. (optional, default to 0)
     - parameter reverse: (query) If true, will sort results newest first. (optional, default to false)
     - parameter startTime: (query) Starting date filter for results. (optional)
     - parameter endTime: (query) Ending date filter for results. (optional)

     - returns: RequestBuilder<[Instrument]> 
     */
    open class func instrumentGetWithRequestBuilder(symbol: String? = nil, filter: String? = nil, columns: String? = nil, count: Double? = nil, start: Double? = nil, reverse: Bool? = nil, startTime: Date? = nil, endTime: Date? = nil) -> RequestBuilder<[Instrument]> {
        let path = "/instrument"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "symbol": symbol, 
            "filter": filter, 
            "columns": columns, 
            "count": count, 
            "start": start, 
            "reverse": reverse, 
            "startTime": startTime?.encodeToJSON(), 
            "endTime": endTime?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<[Instrument]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get all active instruments and instruments that have expired in <24hrs.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func instrumentGetActive(completion: @escaping ((_ data: [Instrument]?,_ error: Error?) -> Void)) {
        instrumentGetActiveWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get all active instruments and instruments that have expired in <24hrs.
     - GET /instrument/active
     - examples: [{contentType=application/json, example=[ {
  "optionUnderlyingPrice" : 0.8774076871421566,
  "deleverage" : true,
  "riskLimit" : 1.489415909854170383397331534069962799549102783203125,
  "fundingBaseSymbol" : "fundingBaseSymbol",
  "prevPrice24h" : 7.143538047012306,
  "highPrice" : 7.058770351582356,
  "fairMethod" : "fairMethod",
  "taxed" : true,
  "state" : "state",
  "expiry" : "2000-01-23T04:56:07.000+00:00",
  "fundingPremiumSymbol" : "fundingPremiumSymbol",
  "publishInterval" : "2000-01-23T04:56:07.000+00:00",
  "publishTime" : "2000-01-23T04:56:07.000+00:00",
  "maintMargin" : 1.0246457001441578,
  "takerFee" : 4.965218492984954,
  "fairBasis" : 4.258773108174356,
  "volume24h" : 6.87805222012787620400331434211693704128265380859375,
  "underlying" : "underlying",
  "quoteToSettleMultiplier" : 7.3862819483858839220147274318151175975799560546875,
  "fundingQuoteSymbol" : "fundingQuoteSymbol",
  "quoteCurrency" : "quoteCurrency",
  "indicativeSettlePrice" : 9.132027271330688,
  "settledPrice" : 9.702963800023566,
  "relistInterval" : "2000-01-23T04:56:07.000+00:00",
  "prevClosePrice" : 8.762042012749001,
  "maxPrice" : 2.3021358869347655,
  "underlyingToPositionMultiplier" : 2.027123023002321833274663731572218239307403564453125,
  "settle" : "2000-01-23T04:56:07.000+00:00",
  "buyLeg" : "buyLeg",
  "tickSize" : 9.301444243932576,
  "markPrice" : 4.678947989005849,
  "settlCurrency" : "settlCurrency",
  "listing" : "2000-01-23T04:56:07.000+00:00",
  "indicativeFundingRate" : 6.683562403749608,
  "positionCurrency" : "positionCurrency",
  "timestamp" : "2000-01-23T04:56:07.000+00:00",
  "limitDownPrice" : 9.018348186070783,
  "lastTickDirection" : "lastTickDirection",
  "rebalanceTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "fairBasisRate" : 6.628464275087742,
  "lastPriceProtected" : 4.652396432933246,
  "midPrice" : 3.0205796992916243,
  "insuranceFee" : 9.965781217890562,
  "optionStrikePrice" : 1.4658129805029452,
  "limitUpPrice" : 6.438423552598547,
  "bankruptLimitUpPrice" : 6.965117697638846,
  "rebalanceInterval" : "2000-01-23T04:56:07.000+00:00",
  "fundingRate" : 9.369310271410669,
  "lastPrice" : 0.10263654006109402,
  "totalVolume" : 2.884162126668780246063761296682059764862060546875,
  "symbol" : "symbol",
  "capped" : true,
  "vwap" : 0.8851374739011653,
  "closingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "typ" : "typ",
  "inverseLeg" : "inverseLeg",
  "reference" : "reference",
  "prevTotalTurnover" : 5.94489560761401580890606055618263781070709228515625,
  "limit" : 7.457744773683766,
  "calcInterval" : "2000-01-23T04:56:07.000+00:00",
  "lastChangePcnt" : 8.969578798196912,
  "askPrice" : 3.0576100241049344,
  "multiplier" : 3.61607674925191080461672754609026014804840087890625,
  "indicativeTaxRate" : 7.260521264802104,
  "settlementFee" : 5.025004791520295,
  "totalTurnover" : 6.70401929795003592715829654480330646038055419921875,
  "turnover24h" : 3.093745262666447448651751983561553061008453369140625,
  "fairPrice" : 1.041444916118296,
  "bidPrice" : 7.740351818741173,
  "volume" : 6.77832496304801335185175048536621034145355224609375,
  "impactMidPrice" : 5.533258397034986,
  "sellLeg" : "sellLeg",
  "optionStrikePcnt" : 0.8008281904610115,
  "maxOrderQty" : 5.63737665663332876420099637471139430999755859375,
  "hasLiquidity" : true,
  "openInterest" : 4.078845849666752343409825698472559452056884765625,
  "riskStep" : 6.8468526983526398765889098285697400569915771484375,
  "optionStrikeRound" : 6.027456183070403,
  "isQuanto" : true,
  "rootSymbol" : "rootSymbol",
  "markMethod" : "markMethod",
  "underlyingSymbol" : "underlyingSymbol",
  "fundingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "makerFee" : 1.1730742509559433,
  "lowPrice" : 6.519180951018382,
  "underlyingToSettleMultiplier" : 4.1456080298839363962315474054776132106781005859375,
  "sessionInterval" : "2000-01-23T04:56:07.000+00:00",
  "fundingInterval" : "2000-01-23T04:56:07.000+00:00",
  "bankruptLimitDownPrice" : 3.5571952270680973,
  "turnover" : 3.35319334701124294184637619764544069766998291015625,
  "impactAskPrice" : 3.2588565619047607,
  "referenceSymbol" : "referenceSymbol",
  "openValue" : 0.202532411323639305322785730822943150997161865234375,
  "isInverse" : true,
  "lotSize" : 7.061401241503109105224211816675961017608642578125,
  "optionMultiplier" : 5.962133916683182,
  "openingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "impactBidPrice" : 7.04836565559697,
  "prevTotalVolume" : 1.2846590061165319429647979632136411964893341064453125,
  "initMargin" : 1.2315135367772556,
  "front" : "2000-01-23T04:56:07.000+00:00"
}, {
  "optionUnderlyingPrice" : 0.8774076871421566,
  "deleverage" : true,
  "riskLimit" : 1.489415909854170383397331534069962799549102783203125,
  "fundingBaseSymbol" : "fundingBaseSymbol",
  "prevPrice24h" : 7.143538047012306,
  "highPrice" : 7.058770351582356,
  "fairMethod" : "fairMethod",
  "taxed" : true,
  "state" : "state",
  "expiry" : "2000-01-23T04:56:07.000+00:00",
  "fundingPremiumSymbol" : "fundingPremiumSymbol",
  "publishInterval" : "2000-01-23T04:56:07.000+00:00",
  "publishTime" : "2000-01-23T04:56:07.000+00:00",
  "maintMargin" : 1.0246457001441578,
  "takerFee" : 4.965218492984954,
  "fairBasis" : 4.258773108174356,
  "volume24h" : 6.87805222012787620400331434211693704128265380859375,
  "underlying" : "underlying",
  "quoteToSettleMultiplier" : 7.3862819483858839220147274318151175975799560546875,
  "fundingQuoteSymbol" : "fundingQuoteSymbol",
  "quoteCurrency" : "quoteCurrency",
  "indicativeSettlePrice" : 9.132027271330688,
  "settledPrice" : 9.702963800023566,
  "relistInterval" : "2000-01-23T04:56:07.000+00:00",
  "prevClosePrice" : 8.762042012749001,
  "maxPrice" : 2.3021358869347655,
  "underlyingToPositionMultiplier" : 2.027123023002321833274663731572218239307403564453125,
  "settle" : "2000-01-23T04:56:07.000+00:00",
  "buyLeg" : "buyLeg",
  "tickSize" : 9.301444243932576,
  "markPrice" : 4.678947989005849,
  "settlCurrency" : "settlCurrency",
  "listing" : "2000-01-23T04:56:07.000+00:00",
  "indicativeFundingRate" : 6.683562403749608,
  "positionCurrency" : "positionCurrency",
  "timestamp" : "2000-01-23T04:56:07.000+00:00",
  "limitDownPrice" : 9.018348186070783,
  "lastTickDirection" : "lastTickDirection",
  "rebalanceTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "fairBasisRate" : 6.628464275087742,
  "lastPriceProtected" : 4.652396432933246,
  "midPrice" : 3.0205796992916243,
  "insuranceFee" : 9.965781217890562,
  "optionStrikePrice" : 1.4658129805029452,
  "limitUpPrice" : 6.438423552598547,
  "bankruptLimitUpPrice" : 6.965117697638846,
  "rebalanceInterval" : "2000-01-23T04:56:07.000+00:00",
  "fundingRate" : 9.369310271410669,
  "lastPrice" : 0.10263654006109402,
  "totalVolume" : 2.884162126668780246063761296682059764862060546875,
  "symbol" : "symbol",
  "capped" : true,
  "vwap" : 0.8851374739011653,
  "closingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "typ" : "typ",
  "inverseLeg" : "inverseLeg",
  "reference" : "reference",
  "prevTotalTurnover" : 5.94489560761401580890606055618263781070709228515625,
  "limit" : 7.457744773683766,
  "calcInterval" : "2000-01-23T04:56:07.000+00:00",
  "lastChangePcnt" : 8.969578798196912,
  "askPrice" : 3.0576100241049344,
  "multiplier" : 3.61607674925191080461672754609026014804840087890625,
  "indicativeTaxRate" : 7.260521264802104,
  "settlementFee" : 5.025004791520295,
  "totalTurnover" : 6.70401929795003592715829654480330646038055419921875,
  "turnover24h" : 3.093745262666447448651751983561553061008453369140625,
  "fairPrice" : 1.041444916118296,
  "bidPrice" : 7.740351818741173,
  "volume" : 6.77832496304801335185175048536621034145355224609375,
  "impactMidPrice" : 5.533258397034986,
  "sellLeg" : "sellLeg",
  "optionStrikePcnt" : 0.8008281904610115,
  "maxOrderQty" : 5.63737665663332876420099637471139430999755859375,
  "hasLiquidity" : true,
  "openInterest" : 4.078845849666752343409825698472559452056884765625,
  "riskStep" : 6.8468526983526398765889098285697400569915771484375,
  "optionStrikeRound" : 6.027456183070403,
  "isQuanto" : true,
  "rootSymbol" : "rootSymbol",
  "markMethod" : "markMethod",
  "underlyingSymbol" : "underlyingSymbol",
  "fundingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "makerFee" : 1.1730742509559433,
  "lowPrice" : 6.519180951018382,
  "underlyingToSettleMultiplier" : 4.1456080298839363962315474054776132106781005859375,
  "sessionInterval" : "2000-01-23T04:56:07.000+00:00",
  "fundingInterval" : "2000-01-23T04:56:07.000+00:00",
  "bankruptLimitDownPrice" : 3.5571952270680973,
  "turnover" : 3.35319334701124294184637619764544069766998291015625,
  "impactAskPrice" : 3.2588565619047607,
  "referenceSymbol" : "referenceSymbol",
  "openValue" : 0.202532411323639305322785730822943150997161865234375,
  "isInverse" : true,
  "lotSize" : 7.061401241503109105224211816675961017608642578125,
  "optionMultiplier" : 5.962133916683182,
  "openingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "impactBidPrice" : 7.04836565559697,
  "prevTotalVolume" : 1.2846590061165319429647979632136411964893341064453125,
  "initMargin" : 1.2315135367772556,
  "front" : "2000-01-23T04:56:07.000+00:00"
} ]}]

     - returns: RequestBuilder<[Instrument]> 
     */
    open class func instrumentGetActiveWithRequestBuilder() -> RequestBuilder<[Instrument]> {
        let path = "/instrument/active"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[Instrument]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Helper method. Gets all active instruments and all indices. This is a join of the result of /indices and /active.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func instrumentGetActiveAndIndices(completion: @escaping ((_ data: [Instrument]?,_ error: Error?) -> Void)) {
        instrumentGetActiveAndIndicesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Helper method. Gets all active instruments and all indices. This is a join of the result of /indices and /active.
     - GET /instrument/activeAndIndices
     - examples: [{contentType=application/json, example=[ {
  "optionUnderlyingPrice" : 0.8774076871421566,
  "deleverage" : true,
  "riskLimit" : 1.489415909854170383397331534069962799549102783203125,
  "fundingBaseSymbol" : "fundingBaseSymbol",
  "prevPrice24h" : 7.143538047012306,
  "highPrice" : 7.058770351582356,
  "fairMethod" : "fairMethod",
  "taxed" : true,
  "state" : "state",
  "expiry" : "2000-01-23T04:56:07.000+00:00",
  "fundingPremiumSymbol" : "fundingPremiumSymbol",
  "publishInterval" : "2000-01-23T04:56:07.000+00:00",
  "publishTime" : "2000-01-23T04:56:07.000+00:00",
  "maintMargin" : 1.0246457001441578,
  "takerFee" : 4.965218492984954,
  "fairBasis" : 4.258773108174356,
  "volume24h" : 6.87805222012787620400331434211693704128265380859375,
  "underlying" : "underlying",
  "quoteToSettleMultiplier" : 7.3862819483858839220147274318151175975799560546875,
  "fundingQuoteSymbol" : "fundingQuoteSymbol",
  "quoteCurrency" : "quoteCurrency",
  "indicativeSettlePrice" : 9.132027271330688,
  "settledPrice" : 9.702963800023566,
  "relistInterval" : "2000-01-23T04:56:07.000+00:00",
  "prevClosePrice" : 8.762042012749001,
  "maxPrice" : 2.3021358869347655,
  "underlyingToPositionMultiplier" : 2.027123023002321833274663731572218239307403564453125,
  "settle" : "2000-01-23T04:56:07.000+00:00",
  "buyLeg" : "buyLeg",
  "tickSize" : 9.301444243932576,
  "markPrice" : 4.678947989005849,
  "settlCurrency" : "settlCurrency",
  "listing" : "2000-01-23T04:56:07.000+00:00",
  "indicativeFundingRate" : 6.683562403749608,
  "positionCurrency" : "positionCurrency",
  "timestamp" : "2000-01-23T04:56:07.000+00:00",
  "limitDownPrice" : 9.018348186070783,
  "lastTickDirection" : "lastTickDirection",
  "rebalanceTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "fairBasisRate" : 6.628464275087742,
  "lastPriceProtected" : 4.652396432933246,
  "midPrice" : 3.0205796992916243,
  "insuranceFee" : 9.965781217890562,
  "optionStrikePrice" : 1.4658129805029452,
  "limitUpPrice" : 6.438423552598547,
  "bankruptLimitUpPrice" : 6.965117697638846,
  "rebalanceInterval" : "2000-01-23T04:56:07.000+00:00",
  "fundingRate" : 9.369310271410669,
  "lastPrice" : 0.10263654006109402,
  "totalVolume" : 2.884162126668780246063761296682059764862060546875,
  "symbol" : "symbol",
  "capped" : true,
  "vwap" : 0.8851374739011653,
  "closingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "typ" : "typ",
  "inverseLeg" : "inverseLeg",
  "reference" : "reference",
  "prevTotalTurnover" : 5.94489560761401580890606055618263781070709228515625,
  "limit" : 7.457744773683766,
  "calcInterval" : "2000-01-23T04:56:07.000+00:00",
  "lastChangePcnt" : 8.969578798196912,
  "askPrice" : 3.0576100241049344,
  "multiplier" : 3.61607674925191080461672754609026014804840087890625,
  "indicativeTaxRate" : 7.260521264802104,
  "settlementFee" : 5.025004791520295,
  "totalTurnover" : 6.70401929795003592715829654480330646038055419921875,
  "turnover24h" : 3.093745262666447448651751983561553061008453369140625,
  "fairPrice" : 1.041444916118296,
  "bidPrice" : 7.740351818741173,
  "volume" : 6.77832496304801335185175048536621034145355224609375,
  "impactMidPrice" : 5.533258397034986,
  "sellLeg" : "sellLeg",
  "optionStrikePcnt" : 0.8008281904610115,
  "maxOrderQty" : 5.63737665663332876420099637471139430999755859375,
  "hasLiquidity" : true,
  "openInterest" : 4.078845849666752343409825698472559452056884765625,
  "riskStep" : 6.8468526983526398765889098285697400569915771484375,
  "optionStrikeRound" : 6.027456183070403,
  "isQuanto" : true,
  "rootSymbol" : "rootSymbol",
  "markMethod" : "markMethod",
  "underlyingSymbol" : "underlyingSymbol",
  "fundingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "makerFee" : 1.1730742509559433,
  "lowPrice" : 6.519180951018382,
  "underlyingToSettleMultiplier" : 4.1456080298839363962315474054776132106781005859375,
  "sessionInterval" : "2000-01-23T04:56:07.000+00:00",
  "fundingInterval" : "2000-01-23T04:56:07.000+00:00",
  "bankruptLimitDownPrice" : 3.5571952270680973,
  "turnover" : 3.35319334701124294184637619764544069766998291015625,
  "impactAskPrice" : 3.2588565619047607,
  "referenceSymbol" : "referenceSymbol",
  "openValue" : 0.202532411323639305322785730822943150997161865234375,
  "isInverse" : true,
  "lotSize" : 7.061401241503109105224211816675961017608642578125,
  "optionMultiplier" : 5.962133916683182,
  "openingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "impactBidPrice" : 7.04836565559697,
  "prevTotalVolume" : 1.2846590061165319429647979632136411964893341064453125,
  "initMargin" : 1.2315135367772556,
  "front" : "2000-01-23T04:56:07.000+00:00"
}, {
  "optionUnderlyingPrice" : 0.8774076871421566,
  "deleverage" : true,
  "riskLimit" : 1.489415909854170383397331534069962799549102783203125,
  "fundingBaseSymbol" : "fundingBaseSymbol",
  "prevPrice24h" : 7.143538047012306,
  "highPrice" : 7.058770351582356,
  "fairMethod" : "fairMethod",
  "taxed" : true,
  "state" : "state",
  "expiry" : "2000-01-23T04:56:07.000+00:00",
  "fundingPremiumSymbol" : "fundingPremiumSymbol",
  "publishInterval" : "2000-01-23T04:56:07.000+00:00",
  "publishTime" : "2000-01-23T04:56:07.000+00:00",
  "maintMargin" : 1.0246457001441578,
  "takerFee" : 4.965218492984954,
  "fairBasis" : 4.258773108174356,
  "volume24h" : 6.87805222012787620400331434211693704128265380859375,
  "underlying" : "underlying",
  "quoteToSettleMultiplier" : 7.3862819483858839220147274318151175975799560546875,
  "fundingQuoteSymbol" : "fundingQuoteSymbol",
  "quoteCurrency" : "quoteCurrency",
  "indicativeSettlePrice" : 9.132027271330688,
  "settledPrice" : 9.702963800023566,
  "relistInterval" : "2000-01-23T04:56:07.000+00:00",
  "prevClosePrice" : 8.762042012749001,
  "maxPrice" : 2.3021358869347655,
  "underlyingToPositionMultiplier" : 2.027123023002321833274663731572218239307403564453125,
  "settle" : "2000-01-23T04:56:07.000+00:00",
  "buyLeg" : "buyLeg",
  "tickSize" : 9.301444243932576,
  "markPrice" : 4.678947989005849,
  "settlCurrency" : "settlCurrency",
  "listing" : "2000-01-23T04:56:07.000+00:00",
  "indicativeFundingRate" : 6.683562403749608,
  "positionCurrency" : "positionCurrency",
  "timestamp" : "2000-01-23T04:56:07.000+00:00",
  "limitDownPrice" : 9.018348186070783,
  "lastTickDirection" : "lastTickDirection",
  "rebalanceTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "fairBasisRate" : 6.628464275087742,
  "lastPriceProtected" : 4.652396432933246,
  "midPrice" : 3.0205796992916243,
  "insuranceFee" : 9.965781217890562,
  "optionStrikePrice" : 1.4658129805029452,
  "limitUpPrice" : 6.438423552598547,
  "bankruptLimitUpPrice" : 6.965117697638846,
  "rebalanceInterval" : "2000-01-23T04:56:07.000+00:00",
  "fundingRate" : 9.369310271410669,
  "lastPrice" : 0.10263654006109402,
  "totalVolume" : 2.884162126668780246063761296682059764862060546875,
  "symbol" : "symbol",
  "capped" : true,
  "vwap" : 0.8851374739011653,
  "closingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "typ" : "typ",
  "inverseLeg" : "inverseLeg",
  "reference" : "reference",
  "prevTotalTurnover" : 5.94489560761401580890606055618263781070709228515625,
  "limit" : 7.457744773683766,
  "calcInterval" : "2000-01-23T04:56:07.000+00:00",
  "lastChangePcnt" : 8.969578798196912,
  "askPrice" : 3.0576100241049344,
  "multiplier" : 3.61607674925191080461672754609026014804840087890625,
  "indicativeTaxRate" : 7.260521264802104,
  "settlementFee" : 5.025004791520295,
  "totalTurnover" : 6.70401929795003592715829654480330646038055419921875,
  "turnover24h" : 3.093745262666447448651751983561553061008453369140625,
  "fairPrice" : 1.041444916118296,
  "bidPrice" : 7.740351818741173,
  "volume" : 6.77832496304801335185175048536621034145355224609375,
  "impactMidPrice" : 5.533258397034986,
  "sellLeg" : "sellLeg",
  "optionStrikePcnt" : 0.8008281904610115,
  "maxOrderQty" : 5.63737665663332876420099637471139430999755859375,
  "hasLiquidity" : true,
  "openInterest" : 4.078845849666752343409825698472559452056884765625,
  "riskStep" : 6.8468526983526398765889098285697400569915771484375,
  "optionStrikeRound" : 6.027456183070403,
  "isQuanto" : true,
  "rootSymbol" : "rootSymbol",
  "markMethod" : "markMethod",
  "underlyingSymbol" : "underlyingSymbol",
  "fundingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "makerFee" : 1.1730742509559433,
  "lowPrice" : 6.519180951018382,
  "underlyingToSettleMultiplier" : 4.1456080298839363962315474054776132106781005859375,
  "sessionInterval" : "2000-01-23T04:56:07.000+00:00",
  "fundingInterval" : "2000-01-23T04:56:07.000+00:00",
  "bankruptLimitDownPrice" : 3.5571952270680973,
  "turnover" : 3.35319334701124294184637619764544069766998291015625,
  "impactAskPrice" : 3.2588565619047607,
  "referenceSymbol" : "referenceSymbol",
  "openValue" : 0.202532411323639305322785730822943150997161865234375,
  "isInverse" : true,
  "lotSize" : 7.061401241503109105224211816675961017608642578125,
  "optionMultiplier" : 5.962133916683182,
  "openingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "impactBidPrice" : 7.04836565559697,
  "prevTotalVolume" : 1.2846590061165319429647979632136411964893341064453125,
  "initMargin" : 1.2315135367772556,
  "front" : "2000-01-23T04:56:07.000+00:00"
} ]}]

     - returns: RequestBuilder<[Instrument]> 
     */
    open class func instrumentGetActiveAndIndicesWithRequestBuilder() -> RequestBuilder<[Instrument]> {
        let path = "/instrument/activeAndIndices"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[Instrument]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Return all active contract series and interval pairs.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func instrumentGetActiveIntervals(completion: @escaping ((_ data: InstrumentInterval?,_ error: Error?) -> Void)) {
        instrumentGetActiveIntervalsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Return all active contract series and interval pairs.
     - GET /instrument/activeIntervals
     - This endpoint is useful for determining which pairs are live. It returns two arrays of   strings. The first is intervals, such as `[\"BVOL:daily\", \"BVOL:weekly\", \"XBU:daily\", \"XBU:monthly\", ...]`. These identifiers are usable in any query's `symbol` param. The second array is the current resolution of these intervals. Results are mapped at the same index.
     - examples: [{contentType=application/json, example={
  "intervals" : [ "intervals", "intervals" ],
  "symbols" : [ "symbols", "symbols" ]
}}]

     - returns: RequestBuilder<InstrumentInterval> 
     */
    open class func instrumentGetActiveIntervalsWithRequestBuilder() -> RequestBuilder<InstrumentInterval> {
        let path = "/instrument/activeIntervals"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InstrumentInterval>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Show constituent parts of an index.
     
     - parameter account: (query)  (optional)
     - parameter symbol: (query) The composite index symbol. (optional, default to .XBT)
     - parameter filter: (query) Generic table filter. Send JSON key/value pairs, such as &#x60;{\&quot;key\&quot;: \&quot;value\&quot;}&#x60;. You can key on individual fields, and do more advanced querying on timestamps. See the [Timestamp Docs](https://www.bitmex.com/app/restAPI#Timestamp-Filters) for more details. (optional)
     - parameter columns: (query) Array of column names to fetch. If omitted, will return all columns.  Note that this method will always return item keys, even when not specified, so you may receive more columns that you expect. (optional)
     - parameter count: (query) Number of results to fetch. (optional, default to 100)
     - parameter start: (query) Starting point for results. (optional, default to 0)
     - parameter reverse: (query) If true, will sort results newest first. (optional, default to false)
     - parameter startTime: (query) Starting date filter for results. (optional)
     - parameter endTime: (query) Ending date filter for results. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func instrumentGetCompositeIndex(account: Double? = nil, symbol: String? = nil, filter: String? = nil, columns: String? = nil, count: Double? = nil, start: Double? = nil, reverse: Bool? = nil, startTime: Date? = nil, endTime: Date? = nil, completion: @escaping ((_ data: [IndexComposite]?,_ error: Error?) -> Void)) {
        instrumentGetCompositeIndexWithRequestBuilder(account: account, symbol: symbol, filter: filter, columns: columns, count: count, start: start, reverse: reverse, startTime: startTime, endTime: endTime).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Show constituent parts of an index.
     - GET /instrument/compositeIndex
     - Composite indices are built from multiple external price sources.  Use this endpoint to get the underlying prices of an index. For example, send a `symbol` of `.XBT` to get the ticks and weights of the constituent exchanges that build the \".XBT\" index.  A tick with reference `\"BMI\"` and weight `null` is the composite index tick. 
     - examples: [{contentType=application/json, example=[ {
  "reference" : "reference",
  "symbol" : "symbol",
  "indexSymbol" : "indexSymbol",
  "logged" : "2000-01-23T04:56:07.000+00:00",
  "weight" : 6.027456183070403,
  "timestamp" : "2000-01-23T04:56:07.000+00:00",
  "lastPrice" : 0.8008281904610115
}, {
  "reference" : "reference",
  "symbol" : "symbol",
  "indexSymbol" : "indexSymbol",
  "logged" : "2000-01-23T04:56:07.000+00:00",
  "weight" : 6.027456183070403,
  "timestamp" : "2000-01-23T04:56:07.000+00:00",
  "lastPrice" : 0.8008281904610115
} ]}]
     
     - parameter account: (query)  (optional)
     - parameter symbol: (query) The composite index symbol. (optional, default to .XBT)
     - parameter filter: (query) Generic table filter. Send JSON key/value pairs, such as &#x60;{\&quot;key\&quot;: \&quot;value\&quot;}&#x60;. You can key on individual fields, and do more advanced querying on timestamps. See the [Timestamp Docs](https://www.bitmex.com/app/restAPI#Timestamp-Filters) for more details. (optional)
     - parameter columns: (query) Array of column names to fetch. If omitted, will return all columns.  Note that this method will always return item keys, even when not specified, so you may receive more columns that you expect. (optional)
     - parameter count: (query) Number of results to fetch. (optional, default to 100)
     - parameter start: (query) Starting point for results. (optional, default to 0)
     - parameter reverse: (query) If true, will sort results newest first. (optional, default to false)
     - parameter startTime: (query) Starting date filter for results. (optional)
     - parameter endTime: (query) Ending date filter for results. (optional)

     - returns: RequestBuilder<[IndexComposite]> 
     */
    open class func instrumentGetCompositeIndexWithRequestBuilder(account: Double? = nil, symbol: String? = nil, filter: String? = nil, columns: String? = nil, count: Double? = nil, start: Double? = nil, reverse: Bool? = nil, startTime: Date? = nil, endTime: Date? = nil) -> RequestBuilder<[IndexComposite]> {
        let path = "/instrument/compositeIndex"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "account": account, 
            "symbol": symbol, 
            "filter": filter, 
            "columns": columns, 
            "count": count, 
            "start": start, 
            "reverse": reverse, 
            "startTime": startTime?.encodeToJSON(), 
            "endTime": endTime?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<[IndexComposite]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get all price indices.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func instrumentGetIndices(completion: @escaping ((_ data: [Instrument]?,_ error: Error?) -> Void)) {
        instrumentGetIndicesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get all price indices.
     - GET /instrument/indices
     - examples: [{contentType=application/json, example=[ {
  "optionUnderlyingPrice" : 0.8774076871421566,
  "deleverage" : true,
  "riskLimit" : 1.489415909854170383397331534069962799549102783203125,
  "fundingBaseSymbol" : "fundingBaseSymbol",
  "prevPrice24h" : 7.143538047012306,
  "highPrice" : 7.058770351582356,
  "fairMethod" : "fairMethod",
  "taxed" : true,
  "state" : "state",
  "expiry" : "2000-01-23T04:56:07.000+00:00",
  "fundingPremiumSymbol" : "fundingPremiumSymbol",
  "publishInterval" : "2000-01-23T04:56:07.000+00:00",
  "publishTime" : "2000-01-23T04:56:07.000+00:00",
  "maintMargin" : 1.0246457001441578,
  "takerFee" : 4.965218492984954,
  "fairBasis" : 4.258773108174356,
  "volume24h" : 6.87805222012787620400331434211693704128265380859375,
  "underlying" : "underlying",
  "quoteToSettleMultiplier" : 7.3862819483858839220147274318151175975799560546875,
  "fundingQuoteSymbol" : "fundingQuoteSymbol",
  "quoteCurrency" : "quoteCurrency",
  "indicativeSettlePrice" : 9.132027271330688,
  "settledPrice" : 9.702963800023566,
  "relistInterval" : "2000-01-23T04:56:07.000+00:00",
  "prevClosePrice" : 8.762042012749001,
  "maxPrice" : 2.3021358869347655,
  "underlyingToPositionMultiplier" : 2.027123023002321833274663731572218239307403564453125,
  "settle" : "2000-01-23T04:56:07.000+00:00",
  "buyLeg" : "buyLeg",
  "tickSize" : 9.301444243932576,
  "markPrice" : 4.678947989005849,
  "settlCurrency" : "settlCurrency",
  "listing" : "2000-01-23T04:56:07.000+00:00",
  "indicativeFundingRate" : 6.683562403749608,
  "positionCurrency" : "positionCurrency",
  "timestamp" : "2000-01-23T04:56:07.000+00:00",
  "limitDownPrice" : 9.018348186070783,
  "lastTickDirection" : "lastTickDirection",
  "rebalanceTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "fairBasisRate" : 6.628464275087742,
  "lastPriceProtected" : 4.652396432933246,
  "midPrice" : 3.0205796992916243,
  "insuranceFee" : 9.965781217890562,
  "optionStrikePrice" : 1.4658129805029452,
  "limitUpPrice" : 6.438423552598547,
  "bankruptLimitUpPrice" : 6.965117697638846,
  "rebalanceInterval" : "2000-01-23T04:56:07.000+00:00",
  "fundingRate" : 9.369310271410669,
  "lastPrice" : 0.10263654006109402,
  "totalVolume" : 2.884162126668780246063761296682059764862060546875,
  "symbol" : "symbol",
  "capped" : true,
  "vwap" : 0.8851374739011653,
  "closingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "typ" : "typ",
  "inverseLeg" : "inverseLeg",
  "reference" : "reference",
  "prevTotalTurnover" : 5.94489560761401580890606055618263781070709228515625,
  "limit" : 7.457744773683766,
  "calcInterval" : "2000-01-23T04:56:07.000+00:00",
  "lastChangePcnt" : 8.969578798196912,
  "askPrice" : 3.0576100241049344,
  "multiplier" : 3.61607674925191080461672754609026014804840087890625,
  "indicativeTaxRate" : 7.260521264802104,
  "settlementFee" : 5.025004791520295,
  "totalTurnover" : 6.70401929795003592715829654480330646038055419921875,
  "turnover24h" : 3.093745262666447448651751983561553061008453369140625,
  "fairPrice" : 1.041444916118296,
  "bidPrice" : 7.740351818741173,
  "volume" : 6.77832496304801335185175048536621034145355224609375,
  "impactMidPrice" : 5.533258397034986,
  "sellLeg" : "sellLeg",
  "optionStrikePcnt" : 0.8008281904610115,
  "maxOrderQty" : 5.63737665663332876420099637471139430999755859375,
  "hasLiquidity" : true,
  "openInterest" : 4.078845849666752343409825698472559452056884765625,
  "riskStep" : 6.8468526983526398765889098285697400569915771484375,
  "optionStrikeRound" : 6.027456183070403,
  "isQuanto" : true,
  "rootSymbol" : "rootSymbol",
  "markMethod" : "markMethod",
  "underlyingSymbol" : "underlyingSymbol",
  "fundingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "makerFee" : 1.1730742509559433,
  "lowPrice" : 6.519180951018382,
  "underlyingToSettleMultiplier" : 4.1456080298839363962315474054776132106781005859375,
  "sessionInterval" : "2000-01-23T04:56:07.000+00:00",
  "fundingInterval" : "2000-01-23T04:56:07.000+00:00",
  "bankruptLimitDownPrice" : 3.5571952270680973,
  "turnover" : 3.35319334701124294184637619764544069766998291015625,
  "impactAskPrice" : 3.2588565619047607,
  "referenceSymbol" : "referenceSymbol",
  "openValue" : 0.202532411323639305322785730822943150997161865234375,
  "isInverse" : true,
  "lotSize" : 7.061401241503109105224211816675961017608642578125,
  "optionMultiplier" : 5.962133916683182,
  "openingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "impactBidPrice" : 7.04836565559697,
  "prevTotalVolume" : 1.2846590061165319429647979632136411964893341064453125,
  "initMargin" : 1.2315135367772556,
  "front" : "2000-01-23T04:56:07.000+00:00"
}, {
  "optionUnderlyingPrice" : 0.8774076871421566,
  "deleverage" : true,
  "riskLimit" : 1.489415909854170383397331534069962799549102783203125,
  "fundingBaseSymbol" : "fundingBaseSymbol",
  "prevPrice24h" : 7.143538047012306,
  "highPrice" : 7.058770351582356,
  "fairMethod" : "fairMethod",
  "taxed" : true,
  "state" : "state",
  "expiry" : "2000-01-23T04:56:07.000+00:00",
  "fundingPremiumSymbol" : "fundingPremiumSymbol",
  "publishInterval" : "2000-01-23T04:56:07.000+00:00",
  "publishTime" : "2000-01-23T04:56:07.000+00:00",
  "maintMargin" : 1.0246457001441578,
  "takerFee" : 4.965218492984954,
  "fairBasis" : 4.258773108174356,
  "volume24h" : 6.87805222012787620400331434211693704128265380859375,
  "underlying" : "underlying",
  "quoteToSettleMultiplier" : 7.3862819483858839220147274318151175975799560546875,
  "fundingQuoteSymbol" : "fundingQuoteSymbol",
  "quoteCurrency" : "quoteCurrency",
  "indicativeSettlePrice" : 9.132027271330688,
  "settledPrice" : 9.702963800023566,
  "relistInterval" : "2000-01-23T04:56:07.000+00:00",
  "prevClosePrice" : 8.762042012749001,
  "maxPrice" : 2.3021358869347655,
  "underlyingToPositionMultiplier" : 2.027123023002321833274663731572218239307403564453125,
  "settle" : "2000-01-23T04:56:07.000+00:00",
  "buyLeg" : "buyLeg",
  "tickSize" : 9.301444243932576,
  "markPrice" : 4.678947989005849,
  "settlCurrency" : "settlCurrency",
  "listing" : "2000-01-23T04:56:07.000+00:00",
  "indicativeFundingRate" : 6.683562403749608,
  "positionCurrency" : "positionCurrency",
  "timestamp" : "2000-01-23T04:56:07.000+00:00",
  "limitDownPrice" : 9.018348186070783,
  "lastTickDirection" : "lastTickDirection",
  "rebalanceTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "fairBasisRate" : 6.628464275087742,
  "lastPriceProtected" : 4.652396432933246,
  "midPrice" : 3.0205796992916243,
  "insuranceFee" : 9.965781217890562,
  "optionStrikePrice" : 1.4658129805029452,
  "limitUpPrice" : 6.438423552598547,
  "bankruptLimitUpPrice" : 6.965117697638846,
  "rebalanceInterval" : "2000-01-23T04:56:07.000+00:00",
  "fundingRate" : 9.369310271410669,
  "lastPrice" : 0.10263654006109402,
  "totalVolume" : 2.884162126668780246063761296682059764862060546875,
  "symbol" : "symbol",
  "capped" : true,
  "vwap" : 0.8851374739011653,
  "closingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "typ" : "typ",
  "inverseLeg" : "inverseLeg",
  "reference" : "reference",
  "prevTotalTurnover" : 5.94489560761401580890606055618263781070709228515625,
  "limit" : 7.457744773683766,
  "calcInterval" : "2000-01-23T04:56:07.000+00:00",
  "lastChangePcnt" : 8.969578798196912,
  "askPrice" : 3.0576100241049344,
  "multiplier" : 3.61607674925191080461672754609026014804840087890625,
  "indicativeTaxRate" : 7.260521264802104,
  "settlementFee" : 5.025004791520295,
  "totalTurnover" : 6.70401929795003592715829654480330646038055419921875,
  "turnover24h" : 3.093745262666447448651751983561553061008453369140625,
  "fairPrice" : 1.041444916118296,
  "bidPrice" : 7.740351818741173,
  "volume" : 6.77832496304801335185175048536621034145355224609375,
  "impactMidPrice" : 5.533258397034986,
  "sellLeg" : "sellLeg",
  "optionStrikePcnt" : 0.8008281904610115,
  "maxOrderQty" : 5.63737665663332876420099637471139430999755859375,
  "hasLiquidity" : true,
  "openInterest" : 4.078845849666752343409825698472559452056884765625,
  "riskStep" : 6.8468526983526398765889098285697400569915771484375,
  "optionStrikeRound" : 6.027456183070403,
  "isQuanto" : true,
  "rootSymbol" : "rootSymbol",
  "markMethod" : "markMethod",
  "underlyingSymbol" : "underlyingSymbol",
  "fundingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "makerFee" : 1.1730742509559433,
  "lowPrice" : 6.519180951018382,
  "underlyingToSettleMultiplier" : 4.1456080298839363962315474054776132106781005859375,
  "sessionInterval" : "2000-01-23T04:56:07.000+00:00",
  "fundingInterval" : "2000-01-23T04:56:07.000+00:00",
  "bankruptLimitDownPrice" : 3.5571952270680973,
  "turnover" : 3.35319334701124294184637619764544069766998291015625,
  "impactAskPrice" : 3.2588565619047607,
  "referenceSymbol" : "referenceSymbol",
  "openValue" : 0.202532411323639305322785730822943150997161865234375,
  "isInverse" : true,
  "lotSize" : 7.061401241503109105224211816675961017608642578125,
  "optionMultiplier" : 5.962133916683182,
  "openingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "impactBidPrice" : 7.04836565559697,
  "prevTotalVolume" : 1.2846590061165319429647979632136411964893341064453125,
  "initMargin" : 1.2315135367772556,
  "front" : "2000-01-23T04:56:07.000+00:00"
} ]}]

     - returns: RequestBuilder<[Instrument]> 
     */
    open class func instrumentGetIndicesWithRequestBuilder() -> RequestBuilder<[Instrument]> {
        let path = "/instrument/indices"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[Instrument]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
