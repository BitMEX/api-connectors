//
// OrderBookAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class OrderBookAPI {
    /**
     Get current orderbook in vertical format.
     
     - parameter symbol: (query) Instrument symbol. Send a series (e.g. XBT) to get data for the nearest contract in that series. 
     - parameter depth: (query) Orderbook depth per side. Send 0 for full depth. (optional, default to 25)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func orderBookGetL2(symbol: String, depth: Double? = nil, completion: @escaping ((_ data: [OrderBookL2]?,_ error: Error?) -> Void)) {
        orderBookGetL2WithRequestBuilder(symbol: symbol, depth: depth).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get current orderbook in vertical format.
     - GET /orderBook/L2
     - examples: [{contentType=application/json, example={}}]
     
     - parameter symbol: (query) Instrument symbol. Send a series (e.g. XBT) to get data for the nearest contract in that series. 
     - parameter depth: (query) Orderbook depth per side. Send 0 for full depth. (optional, default to 25)

     - returns: RequestBuilder<[OrderBookL2]> 
     */
    open class func orderBookGetL2WithRequestBuilder(symbol: String, depth: Double? = nil) -> RequestBuilder<[OrderBookL2]> {
        let path = "/orderBook/L2"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "symbol": symbol, 
            "depth": depth
        ])

        let requestBuilder: RequestBuilder<[OrderBookL2]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
