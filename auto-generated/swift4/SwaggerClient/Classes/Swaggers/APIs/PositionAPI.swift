//
// PositionAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class PositionAPI {
    /**
     Get your positions.
     
     - parameter filter: (query) Table filter. For example, send {\&quot;symbol\&quot;: \&quot;XBTUSD\&quot;}. (optional)
     - parameter columns: (query) Which columns to fetch. For example, send [\&quot;columnName\&quot;]. (optional)
     - parameter count: (query) Number of rows to fetch. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func positionGet(filter: String? = nil, columns: String? = nil, count: Double? = nil, completion: @escaping ((_ data: [Position]?,_ error: Error?) -> Void)) {
        positionGetWithRequestBuilder(filter: filter, columns: columns, count: count).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get your positions.
     - GET /position
     - See <a href=\"http://www.onixs.biz/fix-dictionary/5.0.SP2/msgType_AP_6580.html\">the FIX Spec</a> for explanations of these fields.
     - API Key:
       - type: apiKey api-key 
       - name: apiKey
     - API Key:
       - type: apiKey api-nonce 
       - name: apiNonce
     - API Key:
       - type: apiKey api-signature 
       - name: apiSignature
     - examples: [{contentType=application/json, example=[ {
  "symbol" : "symbol",
  "lastValue" : 5.2991435602753593769875806174241006374359130859375,
  "breakEvenPrice" : 1.8268702177058116,
  "avgCostPrice" : 8.863729185622827,
  "posLoss" : 3.05761002410493443193217899533919990062713623046875,
  "openOrderSellQty" : 1.173074250955943309548956676735542714595794677734375,
  "avgEntryPrice" : 9.254183946267839,
  "taxBase" : 5.5073869641798811613853104063309729099273681640625,
  "foreignNotional" : 6.519180951018382,
  "execComm" : 3.557195227068097320710649000830017030239105224609375,
  "riskLimit" : 5.63737665663332876420099637471139430999755859375,
  "prevUnrealisedPnl" : 2.027123023002321833274663731572218239307403564453125,
  "longBankrupt" : 0.519900201872498524124921459588222205638885498046875,
  "marginCallPrice" : 3.502657762086401,
  "unrealisedCost" : 6.87805222012787620400331434211693704128265380859375,
  "posComm" : 3.02057969929162428712743349024094641208648681640625,
  "posMaint" : 5.5332583970349862312332334113307297229766845703125,
  "simplePnlPcnt" : 4.573936264232251,
  "execSellCost" : 8.7620420127490010742121739895083010196685791015625,
  "realisedCost" : 6.77832496304801335185175048536621034145355224609375,
  "posInit" : 7.7403518187411730622216055053286254405975341796875,
  "grossExecCost" : 3.35319334701124294184637619764544069766998291015625,
  "posAllowance" : 3.258856561904760695824734284542500972747802734375,
  "targetExcessMargin" : 1.0414449161182959269211778519093059003353118896484375,
  "shortBankrupt" : 7.93350688173715123951978966942988336086273193359375,
  "indicativeTax" : 6.07389808578115175663469926803372800350189208984375,
  "maintMargin" : 6.6284642750877420525057459599338471889495849609375,
  "riskValue" : 0.885137473901165261480628032586537301540374755859375,
  "execBuyCost" : 9.3693102714106686335071572102606296539306640625,
  "grossOpenPremium" : 6.70401929795003592715829654480330646038055419921875,
  "currentCost" : 1.2846590061165319429647979632136411964893341064453125,
  "indicativeTaxRate" : 4.86315908102884,
  "underlying" : "underlying",
  "quoteCurrency" : "quoteCurrency",
  "initMarginReq" : 1.4658129805029452,
  "isOpen" : true,
  "posCross" : 8.9695787981969115065794539987109601497650146484375,
  "currentTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "simpleValue" : 8.28965939814297,
  "prevClosePrice" : 4.145608029883936,
  "unrealisedPnlPcnt" : 3.901545264248647,
  "simpleCost" : 1.7325933120207193,
  "execQty" : 9.0183481860707832566959041287191212177276611328125,
  "taxableMargin" : 4.078845849666752343409825698472559452056884765625,
  "openingCost" : 1.231513536777255612975068288506008684635162353515625,
  "realisedGrossPnl" : 7.26052126480210358039357743109576404094696044921875,
  "leverage" : 2.3021358869347655,
  "posState" : "posState",
  "openOrderSellPremium" : 5.02500479152029466689555192715488374233245849609375,
  "simpleQty" : 2.9409642974827896,
  "openingQty" : 7.3862819483858839220147274318151175975799560546875,
  "homeNotional" : 7.058770351582356,
  "liquidationPrice" : 9.183123594773994,
  "openOrderBuyQty" : 1.489415909854170383397331534069962799549102783203125,
  "unrealisedPnl" : 4.4596050349586793259959449642337858676910400390625,
  "execCost" : 6.438423552598546706349225132726132869720458984375,
  "unrealisedGrossPnl" : 9.7029638000235660655334868351928889751434326171875,
  "markPrice" : 3.0937452626664474,
  "posMargin" : 7.04836565559697003635619694250635802745819091796875,
  "unrealisedTax" : 8.2516257489237574418439180590212345123291015625,
  "crossMargin" : true,
  "deleveragePercentile" : 7.061401241503109,
  "openOrderBuyCost" : 6.8468526983526398765889098285697400569915771484375,
  "posCost" : 0.10263654006109401706225980888120830059051513671875,
  "currency" : "currency",
  "commission" : 6.027456183070403,
  "sessionMargin" : 4.258773108174356281097061582840979099273681640625,
  "maintMarginReq" : 5.962133916683182,
  "bankruptPrice" : 8.761432466225475,
  "openOrderSellCost" : 4.9652184929849543237878606305457651615142822265625,
  "markValue" : 7.14353804701230643559028976596891880035400390625,
  "timestamp" : "2000-01-23T04:56:07.000+00:00",
  "realisedPnl" : 0.8774076871421565559927557842456735670566558837890625,
  "varMargin" : 4.67894798900584873990737833082675933837890625,
  "realisedTax" : 9.132027271330688478201409452594816684722900390625,
  "rebalancedPnl" : 9.301444243932575517419536481611430644989013671875,
  "openOrderBuyPremium" : 7.4577447736837658709418974467553198337554931640625,
  "posCost2" : 4.6523964329332461176136348512955009937286376953125,
  "openingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "currentQty" : 6.96511769763884558415156789124011993408203125,
  "currentComm" : 2.884162126668780246063761296682059764862060546875,
  "execSellQty" : 6.683562403749608193948006373830139636993408203125,
  "grossOpenCost" : 5.94489560761401580890606055618263781070709228515625,
  "prevRealisedPnl" : 3.61607674925191080461672754609026014804840087890625,
  "execBuyQty" : 9.965781217890562260208753286860883235931396484375,
  "initMargin" : 0.202532411323639305322785730822943150997161865234375,
  "unrealisedRoePcnt" : 0.43431398824148815,
  "simplePnl" : 6.623518433804886,
  "account" : 0.80082819046101150206595775671303272247314453125,
  "openingComm" : 1.024645700144157789424070870154537260532379150390625,
  "lastPrice" : 0.4182561061793122
}, {
  "symbol" : "symbol",
  "lastValue" : 5.2991435602753593769875806174241006374359130859375,
  "breakEvenPrice" : 1.8268702177058116,
  "avgCostPrice" : 8.863729185622827,
  "posLoss" : 3.05761002410493443193217899533919990062713623046875,
  "openOrderSellQty" : 1.173074250955943309548956676735542714595794677734375,
  "avgEntryPrice" : 9.254183946267839,
  "taxBase" : 5.5073869641798811613853104063309729099273681640625,
  "foreignNotional" : 6.519180951018382,
  "execComm" : 3.557195227068097320710649000830017030239105224609375,
  "riskLimit" : 5.63737665663332876420099637471139430999755859375,
  "prevUnrealisedPnl" : 2.027123023002321833274663731572218239307403564453125,
  "longBankrupt" : 0.519900201872498524124921459588222205638885498046875,
  "marginCallPrice" : 3.502657762086401,
  "unrealisedCost" : 6.87805222012787620400331434211693704128265380859375,
  "posComm" : 3.02057969929162428712743349024094641208648681640625,
  "posMaint" : 5.5332583970349862312332334113307297229766845703125,
  "simplePnlPcnt" : 4.573936264232251,
  "execSellCost" : 8.7620420127490010742121739895083010196685791015625,
  "realisedCost" : 6.77832496304801335185175048536621034145355224609375,
  "posInit" : 7.7403518187411730622216055053286254405975341796875,
  "grossExecCost" : 3.35319334701124294184637619764544069766998291015625,
  "posAllowance" : 3.258856561904760695824734284542500972747802734375,
  "targetExcessMargin" : 1.0414449161182959269211778519093059003353118896484375,
  "shortBankrupt" : 7.93350688173715123951978966942988336086273193359375,
  "indicativeTax" : 6.07389808578115175663469926803372800350189208984375,
  "maintMargin" : 6.6284642750877420525057459599338471889495849609375,
  "riskValue" : 0.885137473901165261480628032586537301540374755859375,
  "execBuyCost" : 9.3693102714106686335071572102606296539306640625,
  "grossOpenPremium" : 6.70401929795003592715829654480330646038055419921875,
  "currentCost" : 1.2846590061165319429647979632136411964893341064453125,
  "indicativeTaxRate" : 4.86315908102884,
  "underlying" : "underlying",
  "quoteCurrency" : "quoteCurrency",
  "initMarginReq" : 1.4658129805029452,
  "isOpen" : true,
  "posCross" : 8.9695787981969115065794539987109601497650146484375,
  "currentTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "simpleValue" : 8.28965939814297,
  "prevClosePrice" : 4.145608029883936,
  "unrealisedPnlPcnt" : 3.901545264248647,
  "simpleCost" : 1.7325933120207193,
  "execQty" : 9.0183481860707832566959041287191212177276611328125,
  "taxableMargin" : 4.078845849666752343409825698472559452056884765625,
  "openingCost" : 1.231513536777255612975068288506008684635162353515625,
  "realisedGrossPnl" : 7.26052126480210358039357743109576404094696044921875,
  "leverage" : 2.3021358869347655,
  "posState" : "posState",
  "openOrderSellPremium" : 5.02500479152029466689555192715488374233245849609375,
  "simpleQty" : 2.9409642974827896,
  "openingQty" : 7.3862819483858839220147274318151175975799560546875,
  "homeNotional" : 7.058770351582356,
  "liquidationPrice" : 9.183123594773994,
  "openOrderBuyQty" : 1.489415909854170383397331534069962799549102783203125,
  "unrealisedPnl" : 4.4596050349586793259959449642337858676910400390625,
  "execCost" : 6.438423552598546706349225132726132869720458984375,
  "unrealisedGrossPnl" : 9.7029638000235660655334868351928889751434326171875,
  "markPrice" : 3.0937452626664474,
  "posMargin" : 7.04836565559697003635619694250635802745819091796875,
  "unrealisedTax" : 8.2516257489237574418439180590212345123291015625,
  "crossMargin" : true,
  "deleveragePercentile" : 7.061401241503109,
  "openOrderBuyCost" : 6.8468526983526398765889098285697400569915771484375,
  "posCost" : 0.10263654006109401706225980888120830059051513671875,
  "currency" : "currency",
  "commission" : 6.027456183070403,
  "sessionMargin" : 4.258773108174356281097061582840979099273681640625,
  "maintMarginReq" : 5.962133916683182,
  "bankruptPrice" : 8.761432466225475,
  "openOrderSellCost" : 4.9652184929849543237878606305457651615142822265625,
  "markValue" : 7.14353804701230643559028976596891880035400390625,
  "timestamp" : "2000-01-23T04:56:07.000+00:00",
  "realisedPnl" : 0.8774076871421565559927557842456735670566558837890625,
  "varMargin" : 4.67894798900584873990737833082675933837890625,
  "realisedTax" : 9.132027271330688478201409452594816684722900390625,
  "rebalancedPnl" : 9.301444243932575517419536481611430644989013671875,
  "openOrderBuyPremium" : 7.4577447736837658709418974467553198337554931640625,
  "posCost2" : 4.6523964329332461176136348512955009937286376953125,
  "openingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "currentQty" : 6.96511769763884558415156789124011993408203125,
  "currentComm" : 2.884162126668780246063761296682059764862060546875,
  "execSellQty" : 6.683562403749608193948006373830139636993408203125,
  "grossOpenCost" : 5.94489560761401580890606055618263781070709228515625,
  "prevRealisedPnl" : 3.61607674925191080461672754609026014804840087890625,
  "execBuyQty" : 9.965781217890562260208753286860883235931396484375,
  "initMargin" : 0.202532411323639305322785730822943150997161865234375,
  "unrealisedRoePcnt" : 0.43431398824148815,
  "simplePnl" : 6.623518433804886,
  "account" : 0.80082819046101150206595775671303272247314453125,
  "openingComm" : 1.024645700144157789424070870154537260532379150390625,
  "lastPrice" : 0.4182561061793122
} ]}]
     
     - parameter filter: (query) Table filter. For example, send {\&quot;symbol\&quot;: \&quot;XBTUSD\&quot;}. (optional)
     - parameter columns: (query) Which columns to fetch. For example, send [\&quot;columnName\&quot;]. (optional)
     - parameter count: (query) Number of rows to fetch. (optional)

     - returns: RequestBuilder<[Position]> 
     */
    open class func positionGetWithRequestBuilder(filter: String? = nil, columns: String? = nil, count: Double? = nil) -> RequestBuilder<[Position]> {
        let path = "/position"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "filter": filter, 
            "columns": columns, 
            "count": count
        ])

        let requestBuilder: RequestBuilder<[Position]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Enable isolated margin or cross margin per-position.
     
     - parameter symbol: (form) Position symbol to isolate. 
     - parameter enabled: (form) True for isolated margin, false for cross margin. (optional, default to true)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func positionIsolateMargin(symbol: String, enabled: Bool? = nil, completion: @escaping ((_ data: Position?,_ error: Error?) -> Void)) {
        positionIsolateMarginWithRequestBuilder(symbol: symbol, enabled: enabled).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Enable isolated margin or cross margin per-position.
     - POST /position/isolate
     - API Key:
       - type: apiKey api-key 
       - name: apiKey
     - API Key:
       - type: apiKey api-nonce 
       - name: apiNonce
     - API Key:
       - type: apiKey api-signature 
       - name: apiSignature
     - examples: [{contentType=application/json, example={
  "symbol" : "symbol",
  "lastValue" : 5.2991435602753593769875806174241006374359130859375,
  "breakEvenPrice" : 1.8268702177058116,
  "avgCostPrice" : 8.863729185622827,
  "posLoss" : 3.05761002410493443193217899533919990062713623046875,
  "openOrderSellQty" : 1.173074250955943309548956676735542714595794677734375,
  "avgEntryPrice" : 9.254183946267839,
  "taxBase" : 5.5073869641798811613853104063309729099273681640625,
  "foreignNotional" : 6.519180951018382,
  "execComm" : 3.557195227068097320710649000830017030239105224609375,
  "riskLimit" : 5.63737665663332876420099637471139430999755859375,
  "prevUnrealisedPnl" : 2.027123023002321833274663731572218239307403564453125,
  "longBankrupt" : 0.519900201872498524124921459588222205638885498046875,
  "marginCallPrice" : 3.502657762086401,
  "unrealisedCost" : 6.87805222012787620400331434211693704128265380859375,
  "posComm" : 3.02057969929162428712743349024094641208648681640625,
  "posMaint" : 5.5332583970349862312332334113307297229766845703125,
  "simplePnlPcnt" : 4.573936264232251,
  "execSellCost" : 8.7620420127490010742121739895083010196685791015625,
  "realisedCost" : 6.77832496304801335185175048536621034145355224609375,
  "posInit" : 7.7403518187411730622216055053286254405975341796875,
  "grossExecCost" : 3.35319334701124294184637619764544069766998291015625,
  "posAllowance" : 3.258856561904760695824734284542500972747802734375,
  "targetExcessMargin" : 1.0414449161182959269211778519093059003353118896484375,
  "shortBankrupt" : 7.93350688173715123951978966942988336086273193359375,
  "indicativeTax" : 6.07389808578115175663469926803372800350189208984375,
  "maintMargin" : 6.6284642750877420525057459599338471889495849609375,
  "riskValue" : 0.885137473901165261480628032586537301540374755859375,
  "execBuyCost" : 9.3693102714106686335071572102606296539306640625,
  "grossOpenPremium" : 6.70401929795003592715829654480330646038055419921875,
  "currentCost" : 1.2846590061165319429647979632136411964893341064453125,
  "indicativeTaxRate" : 4.86315908102884,
  "underlying" : "underlying",
  "quoteCurrency" : "quoteCurrency",
  "initMarginReq" : 1.4658129805029452,
  "isOpen" : true,
  "posCross" : 8.9695787981969115065794539987109601497650146484375,
  "currentTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "simpleValue" : 8.28965939814297,
  "prevClosePrice" : 4.145608029883936,
  "unrealisedPnlPcnt" : 3.901545264248647,
  "simpleCost" : 1.7325933120207193,
  "execQty" : 9.0183481860707832566959041287191212177276611328125,
  "taxableMargin" : 4.078845849666752343409825698472559452056884765625,
  "openingCost" : 1.231513536777255612975068288506008684635162353515625,
  "realisedGrossPnl" : 7.26052126480210358039357743109576404094696044921875,
  "leverage" : 2.3021358869347655,
  "posState" : "posState",
  "openOrderSellPremium" : 5.02500479152029466689555192715488374233245849609375,
  "simpleQty" : 2.9409642974827896,
  "openingQty" : 7.3862819483858839220147274318151175975799560546875,
  "homeNotional" : 7.058770351582356,
  "liquidationPrice" : 9.183123594773994,
  "openOrderBuyQty" : 1.489415909854170383397331534069962799549102783203125,
  "unrealisedPnl" : 4.4596050349586793259959449642337858676910400390625,
  "execCost" : 6.438423552598546706349225132726132869720458984375,
  "unrealisedGrossPnl" : 9.7029638000235660655334868351928889751434326171875,
  "markPrice" : 3.0937452626664474,
  "posMargin" : 7.04836565559697003635619694250635802745819091796875,
  "unrealisedTax" : 8.2516257489237574418439180590212345123291015625,
  "crossMargin" : true,
  "deleveragePercentile" : 7.061401241503109,
  "openOrderBuyCost" : 6.8468526983526398765889098285697400569915771484375,
  "posCost" : 0.10263654006109401706225980888120830059051513671875,
  "currency" : "currency",
  "commission" : 6.027456183070403,
  "sessionMargin" : 4.258773108174356281097061582840979099273681640625,
  "maintMarginReq" : 5.962133916683182,
  "bankruptPrice" : 8.761432466225475,
  "openOrderSellCost" : 4.9652184929849543237878606305457651615142822265625,
  "markValue" : 7.14353804701230643559028976596891880035400390625,
  "timestamp" : "2000-01-23T04:56:07.000+00:00",
  "realisedPnl" : 0.8774076871421565559927557842456735670566558837890625,
  "varMargin" : 4.67894798900584873990737833082675933837890625,
  "realisedTax" : 9.132027271330688478201409452594816684722900390625,
  "rebalancedPnl" : 9.301444243932575517419536481611430644989013671875,
  "openOrderBuyPremium" : 7.4577447736837658709418974467553198337554931640625,
  "posCost2" : 4.6523964329332461176136348512955009937286376953125,
  "openingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "currentQty" : 6.96511769763884558415156789124011993408203125,
  "currentComm" : 2.884162126668780246063761296682059764862060546875,
  "execSellQty" : 6.683562403749608193948006373830139636993408203125,
  "grossOpenCost" : 5.94489560761401580890606055618263781070709228515625,
  "prevRealisedPnl" : 3.61607674925191080461672754609026014804840087890625,
  "execBuyQty" : 9.965781217890562260208753286860883235931396484375,
  "initMargin" : 0.202532411323639305322785730822943150997161865234375,
  "unrealisedRoePcnt" : 0.43431398824148815,
  "simplePnl" : 6.623518433804886,
  "account" : 0.80082819046101150206595775671303272247314453125,
  "openingComm" : 1.024645700144157789424070870154537260532379150390625,
  "lastPrice" : 0.4182561061793122
}}]
     
     - parameter symbol: (form) Position symbol to isolate. 
     - parameter enabled: (form) True for isolated margin, false for cross margin. (optional, default to true)

     - returns: RequestBuilder<Position> 
     */
    open class func positionIsolateMarginWithRequestBuilder(symbol: String, enabled: Bool? = nil) -> RequestBuilder<Position> {
        let path = "/position/isolate"
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
            "symbol": symbol,
            "enabled": enabled
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Position>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Transfer equity in or out of a position.
     
     - parameter symbol: (form) Symbol of position to isolate. 
     - parameter amount: (form) Amount to transfer, in Satoshis. May be negative. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func positionTransferIsolatedMargin(symbol: String, amount: Double, completion: @escaping ((_ data: Position?,_ error: Error?) -> Void)) {
        positionTransferIsolatedMarginWithRequestBuilder(symbol: symbol, amount: amount).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Transfer equity in or out of a position.
     - POST /position/transferMargin
     - API Key:
       - type: apiKey api-key 
       - name: apiKey
     - API Key:
       - type: apiKey api-nonce 
       - name: apiNonce
     - API Key:
       - type: apiKey api-signature 
       - name: apiSignature
     - examples: [{contentType=application/json, example={
  "symbol" : "symbol",
  "lastValue" : 5.2991435602753593769875806174241006374359130859375,
  "breakEvenPrice" : 1.8268702177058116,
  "avgCostPrice" : 8.863729185622827,
  "posLoss" : 3.05761002410493443193217899533919990062713623046875,
  "openOrderSellQty" : 1.173074250955943309548956676735542714595794677734375,
  "avgEntryPrice" : 9.254183946267839,
  "taxBase" : 5.5073869641798811613853104063309729099273681640625,
  "foreignNotional" : 6.519180951018382,
  "execComm" : 3.557195227068097320710649000830017030239105224609375,
  "riskLimit" : 5.63737665663332876420099637471139430999755859375,
  "prevUnrealisedPnl" : 2.027123023002321833274663731572218239307403564453125,
  "longBankrupt" : 0.519900201872498524124921459588222205638885498046875,
  "marginCallPrice" : 3.502657762086401,
  "unrealisedCost" : 6.87805222012787620400331434211693704128265380859375,
  "posComm" : 3.02057969929162428712743349024094641208648681640625,
  "posMaint" : 5.5332583970349862312332334113307297229766845703125,
  "simplePnlPcnt" : 4.573936264232251,
  "execSellCost" : 8.7620420127490010742121739895083010196685791015625,
  "realisedCost" : 6.77832496304801335185175048536621034145355224609375,
  "posInit" : 7.7403518187411730622216055053286254405975341796875,
  "grossExecCost" : 3.35319334701124294184637619764544069766998291015625,
  "posAllowance" : 3.258856561904760695824734284542500972747802734375,
  "targetExcessMargin" : 1.0414449161182959269211778519093059003353118896484375,
  "shortBankrupt" : 7.93350688173715123951978966942988336086273193359375,
  "indicativeTax" : 6.07389808578115175663469926803372800350189208984375,
  "maintMargin" : 6.6284642750877420525057459599338471889495849609375,
  "riskValue" : 0.885137473901165261480628032586537301540374755859375,
  "execBuyCost" : 9.3693102714106686335071572102606296539306640625,
  "grossOpenPremium" : 6.70401929795003592715829654480330646038055419921875,
  "currentCost" : 1.2846590061165319429647979632136411964893341064453125,
  "indicativeTaxRate" : 4.86315908102884,
  "underlying" : "underlying",
  "quoteCurrency" : "quoteCurrency",
  "initMarginReq" : 1.4658129805029452,
  "isOpen" : true,
  "posCross" : 8.9695787981969115065794539987109601497650146484375,
  "currentTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "simpleValue" : 8.28965939814297,
  "prevClosePrice" : 4.145608029883936,
  "unrealisedPnlPcnt" : 3.901545264248647,
  "simpleCost" : 1.7325933120207193,
  "execQty" : 9.0183481860707832566959041287191212177276611328125,
  "taxableMargin" : 4.078845849666752343409825698472559452056884765625,
  "openingCost" : 1.231513536777255612975068288506008684635162353515625,
  "realisedGrossPnl" : 7.26052126480210358039357743109576404094696044921875,
  "leverage" : 2.3021358869347655,
  "posState" : "posState",
  "openOrderSellPremium" : 5.02500479152029466689555192715488374233245849609375,
  "simpleQty" : 2.9409642974827896,
  "openingQty" : 7.3862819483858839220147274318151175975799560546875,
  "homeNotional" : 7.058770351582356,
  "liquidationPrice" : 9.183123594773994,
  "openOrderBuyQty" : 1.489415909854170383397331534069962799549102783203125,
  "unrealisedPnl" : 4.4596050349586793259959449642337858676910400390625,
  "execCost" : 6.438423552598546706349225132726132869720458984375,
  "unrealisedGrossPnl" : 9.7029638000235660655334868351928889751434326171875,
  "markPrice" : 3.0937452626664474,
  "posMargin" : 7.04836565559697003635619694250635802745819091796875,
  "unrealisedTax" : 8.2516257489237574418439180590212345123291015625,
  "crossMargin" : true,
  "deleveragePercentile" : 7.061401241503109,
  "openOrderBuyCost" : 6.8468526983526398765889098285697400569915771484375,
  "posCost" : 0.10263654006109401706225980888120830059051513671875,
  "currency" : "currency",
  "commission" : 6.027456183070403,
  "sessionMargin" : 4.258773108174356281097061582840979099273681640625,
  "maintMarginReq" : 5.962133916683182,
  "bankruptPrice" : 8.761432466225475,
  "openOrderSellCost" : 4.9652184929849543237878606305457651615142822265625,
  "markValue" : 7.14353804701230643559028976596891880035400390625,
  "timestamp" : "2000-01-23T04:56:07.000+00:00",
  "realisedPnl" : 0.8774076871421565559927557842456735670566558837890625,
  "varMargin" : 4.67894798900584873990737833082675933837890625,
  "realisedTax" : 9.132027271330688478201409452594816684722900390625,
  "rebalancedPnl" : 9.301444243932575517419536481611430644989013671875,
  "openOrderBuyPremium" : 7.4577447736837658709418974467553198337554931640625,
  "posCost2" : 4.6523964329332461176136348512955009937286376953125,
  "openingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "currentQty" : 6.96511769763884558415156789124011993408203125,
  "currentComm" : 2.884162126668780246063761296682059764862060546875,
  "execSellQty" : 6.683562403749608193948006373830139636993408203125,
  "grossOpenCost" : 5.94489560761401580890606055618263781070709228515625,
  "prevRealisedPnl" : 3.61607674925191080461672754609026014804840087890625,
  "execBuyQty" : 9.965781217890562260208753286860883235931396484375,
  "initMargin" : 0.202532411323639305322785730822943150997161865234375,
  "unrealisedRoePcnt" : 0.43431398824148815,
  "simplePnl" : 6.623518433804886,
  "account" : 0.80082819046101150206595775671303272247314453125,
  "openingComm" : 1.024645700144157789424070870154537260532379150390625,
  "lastPrice" : 0.4182561061793122
}}]
     
     - parameter symbol: (form) Symbol of position to isolate. 
     - parameter amount: (form) Amount to transfer, in Satoshis. May be negative. 

     - returns: RequestBuilder<Position> 
     */
    open class func positionTransferIsolatedMarginWithRequestBuilder(symbol: String, amount: Double) -> RequestBuilder<Position> {
        let path = "/position/transferMargin"
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
            "symbol": symbol,
            "amount": amount
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Position>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Choose leverage for a position.
     
     - parameter symbol: (form) Symbol of position to adjust. 
     - parameter leverage: (form) Leverage value. Send a number between 0.01 and 100 to enable isolated margin with a fixed leverage. Send 0 to enable cross margin. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func positionUpdateLeverage(symbol: String, leverage: Double, completion: @escaping ((_ data: Position?,_ error: Error?) -> Void)) {
        positionUpdateLeverageWithRequestBuilder(symbol: symbol, leverage: leverage).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Choose leverage for a position.
     - POST /position/leverage
     - API Key:
       - type: apiKey api-key 
       - name: apiKey
     - API Key:
       - type: apiKey api-nonce 
       - name: apiNonce
     - API Key:
       - type: apiKey api-signature 
       - name: apiSignature
     - examples: [{contentType=application/json, example={
  "symbol" : "symbol",
  "lastValue" : 5.2991435602753593769875806174241006374359130859375,
  "breakEvenPrice" : 1.8268702177058116,
  "avgCostPrice" : 8.863729185622827,
  "posLoss" : 3.05761002410493443193217899533919990062713623046875,
  "openOrderSellQty" : 1.173074250955943309548956676735542714595794677734375,
  "avgEntryPrice" : 9.254183946267839,
  "taxBase" : 5.5073869641798811613853104063309729099273681640625,
  "foreignNotional" : 6.519180951018382,
  "execComm" : 3.557195227068097320710649000830017030239105224609375,
  "riskLimit" : 5.63737665663332876420099637471139430999755859375,
  "prevUnrealisedPnl" : 2.027123023002321833274663731572218239307403564453125,
  "longBankrupt" : 0.519900201872498524124921459588222205638885498046875,
  "marginCallPrice" : 3.502657762086401,
  "unrealisedCost" : 6.87805222012787620400331434211693704128265380859375,
  "posComm" : 3.02057969929162428712743349024094641208648681640625,
  "posMaint" : 5.5332583970349862312332334113307297229766845703125,
  "simplePnlPcnt" : 4.573936264232251,
  "execSellCost" : 8.7620420127490010742121739895083010196685791015625,
  "realisedCost" : 6.77832496304801335185175048536621034145355224609375,
  "posInit" : 7.7403518187411730622216055053286254405975341796875,
  "grossExecCost" : 3.35319334701124294184637619764544069766998291015625,
  "posAllowance" : 3.258856561904760695824734284542500972747802734375,
  "targetExcessMargin" : 1.0414449161182959269211778519093059003353118896484375,
  "shortBankrupt" : 7.93350688173715123951978966942988336086273193359375,
  "indicativeTax" : 6.07389808578115175663469926803372800350189208984375,
  "maintMargin" : 6.6284642750877420525057459599338471889495849609375,
  "riskValue" : 0.885137473901165261480628032586537301540374755859375,
  "execBuyCost" : 9.3693102714106686335071572102606296539306640625,
  "grossOpenPremium" : 6.70401929795003592715829654480330646038055419921875,
  "currentCost" : 1.2846590061165319429647979632136411964893341064453125,
  "indicativeTaxRate" : 4.86315908102884,
  "underlying" : "underlying",
  "quoteCurrency" : "quoteCurrency",
  "initMarginReq" : 1.4658129805029452,
  "isOpen" : true,
  "posCross" : 8.9695787981969115065794539987109601497650146484375,
  "currentTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "simpleValue" : 8.28965939814297,
  "prevClosePrice" : 4.145608029883936,
  "unrealisedPnlPcnt" : 3.901545264248647,
  "simpleCost" : 1.7325933120207193,
  "execQty" : 9.0183481860707832566959041287191212177276611328125,
  "taxableMargin" : 4.078845849666752343409825698472559452056884765625,
  "openingCost" : 1.231513536777255612975068288506008684635162353515625,
  "realisedGrossPnl" : 7.26052126480210358039357743109576404094696044921875,
  "leverage" : 2.3021358869347655,
  "posState" : "posState",
  "openOrderSellPremium" : 5.02500479152029466689555192715488374233245849609375,
  "simpleQty" : 2.9409642974827896,
  "openingQty" : 7.3862819483858839220147274318151175975799560546875,
  "homeNotional" : 7.058770351582356,
  "liquidationPrice" : 9.183123594773994,
  "openOrderBuyQty" : 1.489415909854170383397331534069962799549102783203125,
  "unrealisedPnl" : 4.4596050349586793259959449642337858676910400390625,
  "execCost" : 6.438423552598546706349225132726132869720458984375,
  "unrealisedGrossPnl" : 9.7029638000235660655334868351928889751434326171875,
  "markPrice" : 3.0937452626664474,
  "posMargin" : 7.04836565559697003635619694250635802745819091796875,
  "unrealisedTax" : 8.2516257489237574418439180590212345123291015625,
  "crossMargin" : true,
  "deleveragePercentile" : 7.061401241503109,
  "openOrderBuyCost" : 6.8468526983526398765889098285697400569915771484375,
  "posCost" : 0.10263654006109401706225980888120830059051513671875,
  "currency" : "currency",
  "commission" : 6.027456183070403,
  "sessionMargin" : 4.258773108174356281097061582840979099273681640625,
  "maintMarginReq" : 5.962133916683182,
  "bankruptPrice" : 8.761432466225475,
  "openOrderSellCost" : 4.9652184929849543237878606305457651615142822265625,
  "markValue" : 7.14353804701230643559028976596891880035400390625,
  "timestamp" : "2000-01-23T04:56:07.000+00:00",
  "realisedPnl" : 0.8774076871421565559927557842456735670566558837890625,
  "varMargin" : 4.67894798900584873990737833082675933837890625,
  "realisedTax" : 9.132027271330688478201409452594816684722900390625,
  "rebalancedPnl" : 9.301444243932575517419536481611430644989013671875,
  "openOrderBuyPremium" : 7.4577447736837658709418974467553198337554931640625,
  "posCost2" : 4.6523964329332461176136348512955009937286376953125,
  "openingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "currentQty" : 6.96511769763884558415156789124011993408203125,
  "currentComm" : 2.884162126668780246063761296682059764862060546875,
  "execSellQty" : 6.683562403749608193948006373830139636993408203125,
  "grossOpenCost" : 5.94489560761401580890606055618263781070709228515625,
  "prevRealisedPnl" : 3.61607674925191080461672754609026014804840087890625,
  "execBuyQty" : 9.965781217890562260208753286860883235931396484375,
  "initMargin" : 0.202532411323639305322785730822943150997161865234375,
  "unrealisedRoePcnt" : 0.43431398824148815,
  "simplePnl" : 6.623518433804886,
  "account" : 0.80082819046101150206595775671303272247314453125,
  "openingComm" : 1.024645700144157789424070870154537260532379150390625,
  "lastPrice" : 0.4182561061793122
}}]
     
     - parameter symbol: (form) Symbol of position to adjust. 
     - parameter leverage: (form) Leverage value. Send a number between 0.01 and 100 to enable isolated margin with a fixed leverage. Send 0 to enable cross margin. 

     - returns: RequestBuilder<Position> 
     */
    open class func positionUpdateLeverageWithRequestBuilder(symbol: String, leverage: Double) -> RequestBuilder<Position> {
        let path = "/position/leverage"
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
            "symbol": symbol,
            "leverage": leverage
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Position>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Update your risk limit.
     
     - parameter symbol: (form) Symbol of position to update risk limit on. 
     - parameter riskLimit: (form) New Risk Limit, in Satoshis. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func positionUpdateRiskLimit(symbol: String, riskLimit: Double, completion: @escaping ((_ data: Position?,_ error: Error?) -> Void)) {
        positionUpdateRiskLimitWithRequestBuilder(symbol: symbol, riskLimit: riskLimit).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Update your risk limit.
     - POST /position/riskLimit
     - API Key:
       - type: apiKey api-key 
       - name: apiKey
     - API Key:
       - type: apiKey api-nonce 
       - name: apiNonce
     - API Key:
       - type: apiKey api-signature 
       - name: apiSignature
     - examples: [{contentType=application/json, example={
  "symbol" : "symbol",
  "lastValue" : 5.2991435602753593769875806174241006374359130859375,
  "breakEvenPrice" : 1.8268702177058116,
  "avgCostPrice" : 8.863729185622827,
  "posLoss" : 3.05761002410493443193217899533919990062713623046875,
  "openOrderSellQty" : 1.173074250955943309548956676735542714595794677734375,
  "avgEntryPrice" : 9.254183946267839,
  "taxBase" : 5.5073869641798811613853104063309729099273681640625,
  "foreignNotional" : 6.519180951018382,
  "execComm" : 3.557195227068097320710649000830017030239105224609375,
  "riskLimit" : 5.63737665663332876420099637471139430999755859375,
  "prevUnrealisedPnl" : 2.027123023002321833274663731572218239307403564453125,
  "longBankrupt" : 0.519900201872498524124921459588222205638885498046875,
  "marginCallPrice" : 3.502657762086401,
  "unrealisedCost" : 6.87805222012787620400331434211693704128265380859375,
  "posComm" : 3.02057969929162428712743349024094641208648681640625,
  "posMaint" : 5.5332583970349862312332334113307297229766845703125,
  "simplePnlPcnt" : 4.573936264232251,
  "execSellCost" : 8.7620420127490010742121739895083010196685791015625,
  "realisedCost" : 6.77832496304801335185175048536621034145355224609375,
  "posInit" : 7.7403518187411730622216055053286254405975341796875,
  "grossExecCost" : 3.35319334701124294184637619764544069766998291015625,
  "posAllowance" : 3.258856561904760695824734284542500972747802734375,
  "targetExcessMargin" : 1.0414449161182959269211778519093059003353118896484375,
  "shortBankrupt" : 7.93350688173715123951978966942988336086273193359375,
  "indicativeTax" : 6.07389808578115175663469926803372800350189208984375,
  "maintMargin" : 6.6284642750877420525057459599338471889495849609375,
  "riskValue" : 0.885137473901165261480628032586537301540374755859375,
  "execBuyCost" : 9.3693102714106686335071572102606296539306640625,
  "grossOpenPremium" : 6.70401929795003592715829654480330646038055419921875,
  "currentCost" : 1.2846590061165319429647979632136411964893341064453125,
  "indicativeTaxRate" : 4.86315908102884,
  "underlying" : "underlying",
  "quoteCurrency" : "quoteCurrency",
  "initMarginReq" : 1.4658129805029452,
  "isOpen" : true,
  "posCross" : 8.9695787981969115065794539987109601497650146484375,
  "currentTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "simpleValue" : 8.28965939814297,
  "prevClosePrice" : 4.145608029883936,
  "unrealisedPnlPcnt" : 3.901545264248647,
  "simpleCost" : 1.7325933120207193,
  "execQty" : 9.0183481860707832566959041287191212177276611328125,
  "taxableMargin" : 4.078845849666752343409825698472559452056884765625,
  "openingCost" : 1.231513536777255612975068288506008684635162353515625,
  "realisedGrossPnl" : 7.26052126480210358039357743109576404094696044921875,
  "leverage" : 2.3021358869347655,
  "posState" : "posState",
  "openOrderSellPremium" : 5.02500479152029466689555192715488374233245849609375,
  "simpleQty" : 2.9409642974827896,
  "openingQty" : 7.3862819483858839220147274318151175975799560546875,
  "homeNotional" : 7.058770351582356,
  "liquidationPrice" : 9.183123594773994,
  "openOrderBuyQty" : 1.489415909854170383397331534069962799549102783203125,
  "unrealisedPnl" : 4.4596050349586793259959449642337858676910400390625,
  "execCost" : 6.438423552598546706349225132726132869720458984375,
  "unrealisedGrossPnl" : 9.7029638000235660655334868351928889751434326171875,
  "markPrice" : 3.0937452626664474,
  "posMargin" : 7.04836565559697003635619694250635802745819091796875,
  "unrealisedTax" : 8.2516257489237574418439180590212345123291015625,
  "crossMargin" : true,
  "deleveragePercentile" : 7.061401241503109,
  "openOrderBuyCost" : 6.8468526983526398765889098285697400569915771484375,
  "posCost" : 0.10263654006109401706225980888120830059051513671875,
  "currency" : "currency",
  "commission" : 6.027456183070403,
  "sessionMargin" : 4.258773108174356281097061582840979099273681640625,
  "maintMarginReq" : 5.962133916683182,
  "bankruptPrice" : 8.761432466225475,
  "openOrderSellCost" : 4.9652184929849543237878606305457651615142822265625,
  "markValue" : 7.14353804701230643559028976596891880035400390625,
  "timestamp" : "2000-01-23T04:56:07.000+00:00",
  "realisedPnl" : 0.8774076871421565559927557842456735670566558837890625,
  "varMargin" : 4.67894798900584873990737833082675933837890625,
  "realisedTax" : 9.132027271330688478201409452594816684722900390625,
  "rebalancedPnl" : 9.301444243932575517419536481611430644989013671875,
  "openOrderBuyPremium" : 7.4577447736837658709418974467553198337554931640625,
  "posCost2" : 4.6523964329332461176136348512955009937286376953125,
  "openingTimestamp" : "2000-01-23T04:56:07.000+00:00",
  "currentQty" : 6.96511769763884558415156789124011993408203125,
  "currentComm" : 2.884162126668780246063761296682059764862060546875,
  "execSellQty" : 6.683562403749608193948006373830139636993408203125,
  "grossOpenCost" : 5.94489560761401580890606055618263781070709228515625,
  "prevRealisedPnl" : 3.61607674925191080461672754609026014804840087890625,
  "execBuyQty" : 9.965781217890562260208753286860883235931396484375,
  "initMargin" : 0.202532411323639305322785730822943150997161865234375,
  "unrealisedRoePcnt" : 0.43431398824148815,
  "simplePnl" : 6.623518433804886,
  "account" : 0.80082819046101150206595775671303272247314453125,
  "openingComm" : 1.024645700144157789424070870154537260532379150390625,
  "lastPrice" : 0.4182561061793122
}}]
     
     - parameter symbol: (form) Symbol of position to update risk limit on. 
     - parameter riskLimit: (form) New Risk Limit, in Satoshis. 

     - returns: RequestBuilder<Position> 
     */
    open class func positionUpdateRiskLimitWithRequestBuilder(symbol: String, riskLimit: Double) -> RequestBuilder<Position> {
        let path = "/position/riskLimit"
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
            "symbol": symbol,
            "riskLimit": riskLimit
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Position>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
