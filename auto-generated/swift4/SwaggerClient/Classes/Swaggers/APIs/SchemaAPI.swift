//
// SchemaAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class SchemaAPI {
    /**
     Get model schemata for data objects returned by this API.
     
     - parameter model: (query) Optional model filter. If omitted, will return all models. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func schemaGet(model: String? = nil, completion: @escaping ((_ data: Any?,_ error: Error?) -> Void)) {
        schemaGetWithRequestBuilder(model: model).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get model schemata for data objects returned by this API.
     - GET /schema
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter model: (query) Optional model filter. If omitted, will return all models. (optional)

     - returns: RequestBuilder<Any> 
     */
    open class func schemaGetWithRequestBuilder(model: String? = nil) -> RequestBuilder<Any> {
        let path = "/schema"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "model": model
        ])

        let requestBuilder: RequestBuilder<Any>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Returns help text & subject list for websocket usage.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func schemaWebsocketHelp(completion: @escaping ((_ data: Any?,_ error: Error?) -> Void)) {
        schemaWebsocketHelpWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns help text & subject list for websocket usage.
     - GET /schema/websocketHelp
     - examples: [{contentType=application/json, example="{}"}]

     - returns: RequestBuilder<Any> 
     */
    open class func schemaWebsocketHelpWithRequestBuilder() -> RequestBuilder<Any> {
        let path = "/schema/websocketHelp"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Any>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
