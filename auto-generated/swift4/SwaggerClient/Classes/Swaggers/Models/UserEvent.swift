//
// UserEvent.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** User Events for Auditing */

public struct UserEvent: Codable {

    public enum ModelType: String, Codable { 
        case apikeycreated = "apiKeyCreated"
        case deleverageexecution = "deleverageExecution"
        case depositconfirmed = "depositConfirmed"
        case depositpending = "depositPending"
        case banzerovolumeapiuser = "banZeroVolumeApiUser"
        case liquidationorderplaced = "liquidationOrderPlaced"
        case login = "login"
        case pgpmaskedemail = "pgpMaskedEmail"
        case pgptestemail = "pgpTestEmail"
        case passwordchanged = "passwordChanged"
        case positionstateliquidated = "positionStateLiquidated"
        case positionstatewarning = "positionStateWarning"
        case resetpasswordconfirmed = "resetPasswordConfirmed"
        case resetpasswordrequest = "resetPasswordRequest"
        case transfercanceled = "transferCanceled"
        case transfercompleted = "transferCompleted"
        case transferreceived = "transferReceived"
        case transferrequested = "transferRequested"
        case twofactordisabled = "twoFactorDisabled"
        case twofactorenabled = "twoFactorEnabled"
        case withdrawalcanceled = "withdrawalCanceled"
        case withdrawalcompleted = "withdrawalCompleted"
        case withdrawalconfirmed = "withdrawalConfirmed"
        case withdrawalrequested = "withdrawalRequested"
        case addressskipconfirmrequested = "addressSkipConfirmRequested"
        case addressskipconfirmverified = "addressSkipConfirmVerified"
        case verify = "verify"
    }
    public enum Status: String, Codable { 
        case success = "success"
        case failure = "failure"
    }
    public var _id: Double?
    public var type: ModelType
    public var status: Status
    public var userId: Double
    public var createdById: Double
    public var ip: String?
    public var geoipCountry: String?
    public var geoipRegion: String?
    public var geoipSubRegion: String?
    public var eventMeta: Any?
    public var created: Date

    public init(_id: Double?, type: ModelType, status: Status, userId: Double, createdById: Double, ip: String?, geoipCountry: String?, geoipRegion: String?, geoipSubRegion: String?, eventMeta: Any?, created: Date) {
        self._id = _id
        self.type = type
        self.status = status
        self.userId = userId
        self.createdById = createdById
        self.ip = ip
        self.geoipCountry = geoipCountry
        self.geoipRegion = geoipRegion
        self.geoipSubRegion = geoipSubRegion
        self.eventMeta = eventMeta
        self.created = created
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case type
        case status
        case userId
        case createdById
        case ip
        case geoipCountry
        case geoipRegion
        case geoipSubRegion
        case eventMeta
        case created
    }


}

